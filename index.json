
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"沈凡凡，男，博士，副教授，硕士研究生导师，润泽学者，中国计算机学会高级会员，毕业于武汉大学计算机软件与理论专业，CCF信息存储技术专业委员会执行委员，CCF嵌入式系统专业委员会执行委员，CCF体系结构专业委员会委员，江苏省计算机学会计算机系统结构专业委员会委员、江苏省计算机学会计算机应用专业委员会委员。主持国家自然科学基金1项，省部级课题3项，参与国家自然科学基金、省部级项目多项。在《计算机学报》、《软件学报》、《计算机研究与发展》、《电子学报》、TC、SUPE、Cluster、CJE等国内外重要学术刊物上发表论文20余篇。担任国家自然科学基金项目评审专家、江苏省科技咨询专家、广东省科技咨询专家、山东省科技咨询专家等。主要讲授《操作系统》、《大数据存储技术》、《计算机系统基础》、《高等计算机系统结构》等课程。\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1712326954,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"沈凡凡，男，博士，副教授，硕士研究生导师，润泽学者，中国计算机学会高级会员，毕业于武汉大学计算机软件与理论专业，CCF信息存储技术专业委员会执行委员，CCF嵌入式系统专业委员会执行委员，CCF体系结构专业委员会委员，江苏省计算机学会计算机系统结构专业委员会委员、江苏省计算机学会计算机应用专业委员会委员。主持国家自然科学基金1项，省部级课题3项，参与国家自然科学基金、省部级项目多项。在《计算机学报》、《软件学报》、《计算机研究与发展》、《电子学报》、TC、SUPE、Cluster、CJE等国内外重要学术刊物上发表论文20余篇。担任国家自然科学基金项目评审专家、江苏省科技咨询专家、广东省科技咨询专家、山东省科技咨询专家等。主要讲授《操作系统》、《大数据存储技术》、《计算机系统基础》、《高等计算机系统结构》等课程。","tags":null,"title":"沈凡凡","type":"authors"},{"authors":null,"categories":null,"content":"1.安装步骤 下载地址：https://www.mongodb.com/download-center/community 版本4.4或更高版本； 或者网盘下载：https://pan.baidu.com/s/15KwMqxcVFi8D6BpMBKNQkA?pwd=abt7 提取码: abt7 安装方法参考：https://www.runoob.com/mongodb/mongodb-window-install.html 安装过程中不要勾选MongoDB Compass（可视化环境），MongoDB单独安装。 2.配置数据和日志文件目录（自定义） 创建数据目录：D:\\mongodb\\data\\db 创建日志目录：D:\\mongodb\\data\\log 创建日志文件：D:\\mongodb\\data\\log\\mongodb.log 3.安装成功与否测试 启动服务器：C:\\Program Files\\MongoDB\\Server\\4.4\\bin\u0026gt;.\\mongod.exe –dbpath d:\\mongodb\\data\\db 看到日志倒数第二行：waiting for connections on port 27017 浏览器输入：http://localhost:27017/ 显示It looks like you are … 出现上述情况，说明安装正常 ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1708766632,"objectID":"cf9ddac390693f94948e13899dc3907e","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/","section":"courses","summary":"Blah, blah, blah...","tags":null,"title":"第1章 初识MongoDB","type":"book"},{"authors":["沈凡凡"],"categories":null,"content":"一、课程介绍 MongoDB在文档型数据库中排名第一。本课程是数据科学与大数据技术专业学生必须学习和掌握的基础课程，是一门理论与实践相结合的专业主干课。注重培养学生的自主学习和动手操作能力。大数据存储技术是海量数据存储的基础和支撑，它采用分布式计算架构方式，对海量数据提供数据存储和业务访问功能，主要讲授大数据存储MongoDB、CRUD操作、索引、聚集分析、wiredtriger存储引擎、复制集、分片集群、分布式文件存储系统、管理与监控、权限管理和应用实践。通过本课程的学习，学生能够掌握大数据技术的基本概念、基本原理、设计方法和实现技术。具备分析和实现海量数据的分布式存储的基本能力。培养学生的工匠意识，引导学生运用唯物主义辩证法分析和解决问题的能力。\n感谢“阿里云计算有限公司”对本课程的大力支持！ 感谢李晓涵、倪可欣、谢金龙、尚祥枝等同学编写在线教程！\n二、课程资源 2024年课件PPT地址，历史：2023年课件PPT地址 参考教材： 1.MongoDB核心原理与实践，郭远威，电子工业出版社 2.大数据存储MongoDB实战指南，郭远威，人民邮电出版社； 3.MongoDB权威指南，人民邮电出版社，香农·布拉德肖（Shannon Bradshaw） 著，牟天垒，王明辉 译。 数字化资源： MongoDB官方文档手册； MongoDB的教程网站； Mongodb开源代码 三、课程考核方式 平时情况：20%\n大作业：20%\n期末考试：60%\n四、教学计划 2024年春授课时间（1-17周） 2022级数据科学1班，周1第1-2，文心楼204； 2022级数据科学2班，周1第3-4，文心楼203； 每章对应的PPT课件在这里，2024年课件PPT地址 Lesson Number 章节 内容 备注 1 第1章 初识MongoDB MongoDB的发展与现状、关键特性、安装部署、重要进程 作业1：安装环境 2 第2章 CRUD操作 插入操作、删除操作、修改操作 掌握操作语法 3 第2章 CRUD操作 查询操作 作业2 4 第3章 索引 单字段索引、复合索引、多键索引、索引管理、查询优化 作业3 5 第4章 聚集操作 简单聚集函数，管道聚集，MapReduce编程 作业4 6 第5章 WiredTiger存储引擎 存储引擎的数据结构、原理 7 第6章 复制集 复制集概述、部署一个复制集 五、如何科学的提问？ 一、实验练习过程中，会遇到各种各样的bug，请不要怕。在提问之前，请仔细阅读How-To-Ask-Questions-The-Smart-Way提问的智慧和Stop-Ask-Questions-The-Stupid-Ways/这两篇文章。这两篇文章并不是为了故意浪费大家的时间, 也不是为了禁止大家提出任何问题, 而是为了让大家知道\u0026#34;什么是正确的\u0026#34;. 当你愿意为这些\u0026#34;正确的做法\u0026#34;去努力, 并且尝试用专业的方式提出问题的时候, 你就已经迈出了成为\u0026#34;成为专业人士\u0026#34;的第一步1 。\n二、如果都没有解决，向其他人提问的时候该这样描述：\n1.我已经尝试过哪些方案？但是依然报错。 2.我的尝试过程描述、操作截图、报错截图。 三、提问的套路图如下： 六、常见问题解决方法 1.我喜欢最新版本的软件，我就直接官网下载安装，可以吗？\n回答：编程能力强，能自我解决问题的，强烈建议用新版本。如果碰到问题，不太会独立解决，建议按照课程PPT的版本来，因为新版本肯定和旧版本有细微的差距。\n2.我怎么运行不出PPT的结果？我的操作怎么报错？\n回答：请仔细读懂PPT语句的含义，认真学习语法规则，检查自己是否敲错。少空格，单词错误，漏字符等等。\n3.我写的命令或查询语句为什么不能成功？\n回答：请检查命令是否书写正确？命令的路径是否正确？查询语句的语法是否正确？是否查看官方文档的语法规则？\n参考(如何科学地提问)) ↩︎\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1712634993,"objectID":"75838ad6b9cb206a80f426854cafe6de","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/bigdatastorage/","section":"courses","summary":"本课程是数据科学与大数据技术专业学生必须学习和掌握的基础课程，是一门理论与实践相结合的专业主干课。注重培养学生的自主学习和动手操作能力。大数据存储技术是海量数据存储的基础和支撑，它采用分布式计算架构方式，对海量数据提供数据存储和业务访问功能。","tags":null,"title":"《大数据存储技术》课程","type":"book"},{"authors":["沈凡凡"],"categories":null,"content":"一、课程介绍 《操作系统》课程是计算机考研408指定课程。操作系统是计算机系统的指挥中心，它既是系统中各种资源的管理者，又是服务的提供者。操作系统在计算机系统中所处的地位和作用决定本课程在计算机学科课程中特殊重要的核心位置。本课程主要讲授操作系统的基本概念、基本原理、设计方法和实现技术，包括：操作系统概述、进程线程与作业、中断与处理机调度、互斥同步、死锁、存储管理、输入输出系统、文件系统等内容。\n二、课程资源 updating：2023年操作系统课件PPT，配套练习题库 教材：计算机操作系统（慕课版），汤小丹 王红玲 姜华 汤子瀛编著，人民邮电出版社 本书官方视频资源：1.官方全书慕课视频(新书的封底有刮刮卡激活码)，2.B站官方教学视频王红玲主讲 MIT神级OS课程，强烈推荐学习：operating systems 6.828 上海交通大学陈海波老师，华为操作系统首席科学家，专注操作系统研究，IPADS实验室，教材与实验：操作系统原理与实现，建议自学完成实验部分 Linux命令大全，著名的操作系统专家Andrew S. Tanenbaum的个人网站 三、课程考核方式 课堂表现和作业：20%\n期中测试：20%\n期末考试：60%\n四、教学计划 每章对应的PPT课件在这里，2023年课件PPT地址\nLesson Number 章节 内容 备注 1 第1章 操作系统引论1.1-1.5节 第1章思维导图 操作系统的目标和作用、操作系统的发展过程、操作系统的基本特性、操作系统的主要功能、操作系统的结构设计 2 第1章 操作系统引论1.6节1.7节\n第2章 进程描述与控制 2.1-2.4节\n第2章思维导图 前趋图、进程的描述、控制、通信 第1章作业，课后1，2，25 3 第2章 进程描述与控制 2.5-2.6节\n第3章 处理机调度与死锁 3.1-3.2节\n第3章思维导图 线程的基本概念和实现，处理机调度概述，调度算法 第2章作业，1，2，21 4 第3章 处理机调度与死锁 3.3-3.7节 实时调度，死锁，预防死锁，避免死锁 5 第3章 处理机调度与死锁 3.8节\n第4章 进程同步 4.1-4.5节\n第4章思维导图 死锁的检测与解除，进程同步的基本概念，软件同步机制，硬件同步机制，信号量机制，管程机制 第3章作业，课后1，2，20，22 6 第4章 进程同步 4.6-4.7节\n第5章 存储器管理5.1-5.2节\n第5章思维导图 经典进程的同步问题、Linux进程同步机制，存储器的层次结构，程序的装入和链接。 第4章作业，课后1，2，13，15，16 7 第5章 存储器管理5.3-5.5\n第5章思维导图 对换与覆盖、连续分配存储管理方式、分页存储管理方式 8 第5章 存储器管理5.6-5.7\n第5章思维导图\n第6章 虚拟存储器6.1-6.3 第6章思维导图 分段存储管理方式、IA-32/x86-64内存管理、虚拟存储器概述、请求分页存储管理方式、页面置换算法 第5章作业，课后15，18 9 第6章 虚拟存储器6.4-6.6 第6章思维导图 第7章 输入输出系统7.1-7.2 第7章思维导图 抖动、请求分段存储管理方式、I/0系统的功能模型接口、I/O设备控制器、 第6章作业，课后13，15，18 10 第7章 输入输出系统7.3-7.7 第7章思维导图 中断和中断处理程序、设备驱动程序、与设备无关的I/O软件、用户层的I/O软件、缓冲区管理 11 习题讲解、期中测试 作业讲解、测试 12 第7章 输入输出系统7.8 第8章文件管理8.1和8.2 第8章思维导图 磁盘调度、文件和文件系统、文件的逻辑结构 13 第8章文件管理8.1和8.2 第8章思维导图 文件目录、文件共享、文件保护 作业13，14 14 第9章磁盘存储器管理 9.1和9.2 第9章思维导图 外存的组织方式、文件存储空间管理 作业15，16 15 第9章磁盘存储器管理 9.3-9.6 第9章思维导图 磁盘速度、可靠性、一致性等新技术 16 复习课、习题课 练习：配套练习题库 ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1703587640,"objectID":"edc547f69c006f435c6c53062358bb59","permalink":"https://fanfanshen.github.io/courses/operatingsystem/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/operatingsystem/","section":"courses","summary":"操作系统是计算机系统的指挥中心，它既是系统中各种资源的管理者，又是服务的提供者。操作系统在计算机系统中所处的地位和作用决定本课程在计算机学科课程中特殊重要的核心位置。","tags":null,"title":"《计算机操作系统》课程","type":"book"},{"authors":null,"categories":null,"content":"1.重点 掌握索引的创建和优化方法 掌握单字段索引、复合索引、多键索引、索引管理、查询优化 2.索引的概念 索引是对数据库表中一列或多列的值进行排序的一种结构\n索引通常能够极大的提高查询的效率\n索引的建立要花费系统时间，索引文件也会占用磁盘空间 比如：书的目录、序号、学号等\nMongoDB索引的数据结构是B+树\n","date":1712534400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1712630742,"objectID":"b7d3381980b12a244289051f97fca388","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/","section":"courses","summary":"1.重点 掌握索引的创建和优化方法 掌握单字段索引、复合索引、多键索引、索引管理、查询优化 2.索引的概念 索引是对数据库表中一列或多列的值进行排序的一种结构\n索引通常能够极大的提高查询的效率\n索引的建立要花费系统时间，索引文件也会占用磁盘空间 比如：书的目录、序号、学号等\nMongoDB索引的数据结构是B+树","tags":null,"title":"第3章 索引","type":"book"},{"authors":[],"categories":null,"content":" 查看资源 一、在线数据库检索资源 DBLP sci-hub 谷歌学术 百度学术 中国知网 二、学术刊物 中国计算机学会推荐国际学术会议和期刊目录 CCF发布计算领域高质量科技期刊分级目录 计算机学报 中国科学(F) 软件学报 电子学报 自动化学报 计算机研究与发展 三、顶级会议/期刊 FAST、USENIX ATC、PPOPP、MSST、MASCOTS、SYSTOR、TOS、TC、TPDS、VLDB 偏系统：HPCA、ISCA、SOSP、OSDI、NSDI 偏数据库：SIGMOD、ICDE、PVLDB、VLDBJ 偏EDA：DAC、DATE、ICCD、ICCAD、ESWEEK 人工智能：AAAI，CVPR，ICCV，ICML，IJCAI，TPAMI 有源代码的会议（见论文右上角的图标Artifact Evaluation）：FAST、USENIX ATC、SOSP、OSDI、HPCA、PPOPP\n学者网站： https://hanlab.mit.edu/ 四、科研方法 ","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1708768836,"objectID":"0d9ca5542a442d81abaed094383e30a0","permalink":"https://fanfanshen.github.io/library/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/library/","section":"","summary":" 查看资源 一、在线数据库检索资源 DBLP sci-hub 谷歌学术 百度学术 中国知网 二、学术刊物 中国计算机学会推荐国际学术会议和期刊目录 CCF发布计算领域高质量科技期刊分级目录 计算机学报 中国科学(F) 软件学报 电子学报 自动化学报 计算机研究与发展 三、顶级会议/期刊 FAST、USENIX ATC、PPOPP、MSST、MASCOTS、SYSTOR、TOS、TC、TPDS、VLDB 偏系统：HPCA、ISCA、SOSP、OSDI、NSDI 偏数据库：SIGMOD、ICDE、PVLDB、VLDBJ 偏EDA：DAC、DATE、ICCD、ICCAD、ESWEEK 人工智能：AAAI，CVPR，ICCV，ICML，IJCAI，TPAMI 有源代码的会议（见论文右上角的图标Artifact Evaluation）：FAST、USENIX ATC、SOSP、OSDI、HPCA、PPOPP\n学者网站： https://hanlab.mit.edu/ 四、科研方法 ","tags":[],"title":"学术资源","type":"page"},{"authors":null,"categories":null,"content":" 欢迎研究生、本科生加入我们，一起学习，共同进步！联系邮箱：ffshen@nau.edu.cn 一、指导学生情况 2024，研究生：惠丽洁，Dynamic Grouping Scheme for Personalized Federated Meta-Learning，投稿中 2024年4月，研究生：杨博帆获得2024年江苏省研究生实践创新计划项目，立项，资助1.5万元 2024年4月，研究生：史林，BMSE: Blockchain-based multi-keyword searchable encryption for electronic medical records，Computer Standards \u0026amp; Interfaces(中科院2区) 2023年7月，研究生：汤星译，基于iFA-LSTM的恶意行为检测方法，计算机工程与科学（北大核心录用），2024.1 2023年6月，研究生：汤星译获得2023年江苏省研究生实践创新计划项目，立项，资助1.5万元 2023年6月，研究生：刘海鹏获得2023年江苏省研究生实践创新计划项目，立项，资助1.5万元 2023年3月，研究生：刘海鹏，基于AHP的多特征融合图像质量评价算法，计算机仿真（北大核心录用），appear in 2024 2023年4月，研究生：杨博帆，基于深度强化学习的无人机矿井自主巡航研究，武汉大学学报（北大核心），2023.4(优秀论文) 2022年6月，本科生：夏锐禹，校优秀本科生毕业设计，目前为北京工业大学硕士生 2022年3月，研究生：史林，2022年度江苏省研究生科研与实践创新计划项目，立项，1.5万元 2023年，指导学生获得大学生创新创业训练计划项目，国家级，袁媛，颜敏杰，陶琴 2023年，指导学生获得中国大学生服务外包创新创业大赛，省级三等奖2项 2023年，指导学生获得蓝桥杯省二等奖 2021年7月，指导学生获得中国大学生计算机设计大赛（14届），国家级，二等奖，学生：左量、吴子怡、许傲 2021年5月，指导学生获得中国大学生计算机设计大赛，江苏省级，三等奖，学生：左量、吴子怡、许傲 二、在读研究生 2023级：苏文璋，李倩倩 2022级：杨博帆，梁琦玮，惠丽洁 2021级：史林，刘海鹏，汤星译 三、指导的本科生(毕业生) 2024届：缪浩然（无锡海隆），秦子恒（中科创达），唐一宸（雄安联通），汤觉淇（江苏海隆软件）， 2023届：常旭（南京公务员），周瑾（SHEIN），叶国绪（简睿捷软件），曹晨洋，陈一祺，索朗扎巴，陈燚（西南大学读研），陈健（南审读研），任翔宇（南审读研），杨聪（东华大学读研） 2022届：叶风云（南京毕马威服务中心，优秀毕业论文），刘宇（风云再起），沈金泽（中国科学技术大学读研），张晓宇（博泰车联网），夏锐禹（北京工业大学读研，优秀毕业论文），唐钦（东北大学读研），章江林(南京国睿信维) 2021届：刘浩，陈霖 ","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712632575,"objectID":"cee200f3791b5f710de997cf3f1356b0","permalink":"https://fanfanshen.github.io/students/member/","publishdate":"2030-06-01T13:00:00Z","relpermalink":"/students/member/","section":"students","summary":"历年指导的研究生、本科生成果情况，毕业情况等。","tags":null,"title":"学生情况","type":"students"},{"authors":null,"categories":null,"content":"索引的创建方法 语法格式： db.**collection.** createIndex(keys, options)- Key值为你要创建的索引字段，1为按升序创建索引，如果你想按降序来创建索引指定为-1即可 3.0.0版本前创建索引方法为 db.collection.ensureIndex()，之后的版本使用了 db.collection.createIndex() 方法，ensureIndex() 还能用，但只是 createIndex() 的别名。\n例如：db.col.createIndex({“title”:1}) 查询创建的索引： db.customers.getIndexes()\ncreateIndex()可选参数参考表 可选参数参考表 ","date":1712534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712630632,"objectID":"426579b2c46f0f1c95ce932922be1362","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.1/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/3.1/","section":"courses","summary":"索引的创建方法 语法格式： db.**collection.** createIndex(keys, options)- Key值为你要创建的索引字段，1为按升序创建索引，如果你想按降序来创建索引指定为-1即可 3.0.0版本前创建索引方法为 db.collection.ensureIndex()，之后的版本使用了 db.collection.createIndex() 方法，ensureIndex() 还能用，但只是 createIndex() 的别名。\n例如：db.col.createIndex({“title”:1}) 查询创建的索引： db.customers.getIndexes()\ncreateIndex()可选参数参考表 可选参数参考表 ","tags":null,"title":"3.1 创建索引","type":"book"},{"authors":null,"categories":null,"content":"3.2.1 索引的删除方法 语法格式如下： db.collection.dropIndex(“索引名称”) //删除集合指定索引 示例：db.user.dropIndex({id:1})\ndb.col.dropIndexes() //删除集合所有索引 获取更多命令，可以输入db.collection.后双击Tab键。 ","date":1712534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712630649,"objectID":"9e6cabd52c5bf88de9789d5720359931","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.2/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/3.2/","section":"courses","summary":"3.2.1 索引的删除方法 语法格式如下： db.collection.dropIndex(“索引名称”) //删除集合指定索引 示例：db.user.dropIndex({id:1})\ndb.col.dropIndexes() //删除集合所有索引 获取更多命令，可以输入db.collection.后双击Tab键。 ","tags":null,"title":"3.2 删除索引","type":"book"},{"authors":null,"categories":null,"content":"3.3.1 了解单字段索引 MongoDB默认为所有集合都创建了一个 _id字段的单字段索引，而且这个索引是唯一的，不能删除 ； _id字段作为一个集合的主键，值是唯一的； 对于一个集合来说，也可以在其他字段上创建单字段的唯一索引； 3.3.2 创建单字段索引准备工作 准备测试数据:\nfor(var i=1;i\u0026lt;10;i++) db.customers.insert({name:\u0026#34;jordan\u0026#34;+i,country:\u0026#34;American\u0026#34;}) for(var i=1;i\u0026lt;10;i++) db.customers.insert({name:\u0026#34;gaga\u0026#34;+i,country:\u0026#34;American\u0026#34;}) for(var i=1;i\u0026lt;10;i++) db.customers.insert({name:\u0026#34;ham\u0026#34;+i,country:\u0026#34;UK\u0026#34;}) for(var i=1;i\u0026lt;10;i++) db.customers.insert({name:\u0026#34;brown\u0026#34;+i,country:\u0026#34;UK\u0026#34;}) for(var i=1; i\u0026lt;10; i++) db.customers.insert({name:\u0026#34;ramda\u0026#34;+i, country:\u0026#34;Malaysia\u0026#34;}) 注：删除上一章添加的customers数据\n3.3.3 创建单字段唯一索引 db.customers.createIndex({name:1},{unique:true})\n索引创建成功后可通过如下语句查询增加的索引： db.customers.getIndexes()\nv表示索引的版本； key表示索引建立在哪个字段上； 1表示索引按照升序排列； ns索引所在的命名空间\n效果如图\n显示单字段索引 索引查询效率分析 db.customers.find({name:\u0026#34;ramda9\u0026#34;}).explain(\u0026#34;executionStats\u0026#34;) //使用索引字段作为查询选择器 db.customers.find({country:\u0026#34;Malaysia\u0026#34;}).explain(\u0026#34;executionStats\u0026#34;) //不使用索引字段作为查询选择器\n使用索引：\n使用索引 不使用索引：\n不使用索引 totalKeysExamined：遍历索引的次数 totalDocsExamined：遍历文档的次数 executionTimeMillis：预测需要执行的时间\n","date":1712534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712630671,"objectID":"03d1c1e8643be095e1b153b61fa66ea8","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.3/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/3.3/","section":"courses","summary":"3.3.1 了解单字段索引 MongoDB默认为所有集合都创建了一个 _id字段的单字段索引，而且这个索引是唯一的，不能删除 ； _id字段作为一个集合的主键，值是唯一的； 对于一个集合来说，也可以在其他字段上创建单字段的唯一索引； 3.3.2 创建单字段索引准备工作 准备测试数据:\nfor(var i=1;i\u003c10;i++) db.customers.insert({name:\"jordan\"+i,country:\"American\"}) for(var i=1;i\u003c10;i++) db.customers.insert({name:\"gaga\"+i,country:\"American\"}) for(var i=1;i\u003c10;i++) db.customers.insert({name:\"ham\"+i,country:\"UK\"}) for(var i=1;i\u003c10;i++) db.customers.insert({name:\"brown\"+i,country:\"UK\"}) for(var i=1; i\u003c10; i++) db.customers.insert({name:\"ramda\"+i, country:\"Malaysia\"}) 注：删除上一章添加的customers数据\n3.3.3 创建单字段唯一索引 db.","tags":null,"title":"3.3 单字段索引","type":"book"},{"authors":null,"categories":null,"content":" MongoDB支持多个字段的复合索引，复合索引支持匹配多个字段的查询。 for(var i=1; i\u0026lt;10; i++) db.customers.insert({name:\u0026#34;lanbo\u0026#34;+i, country:\u0026#34;Malaysia\u0026#34;}) //增加测试数据 db.customers.find({country:\u0026#34;Malaysia\u0026#34;}).explain(\u0026#34;executionStats\u0026#34;) //执行查询语句 此查询会扫描54个文档，全表扫描，匹配上的文档只有18个，没有用索引； db.customers.createIndex({country:1}) //增加索引 再执行查询语句可知，此查询会扫描18个文档，同时匹配18个； db.customers.createIndex({name:1,country:1}) //创建复合索引 db.customers.find({name:\u0026#34;lanbo2\u0026#34;,country:\u0026#34;Malaysia\u0026#34;}).explain(\u0026#34;executionStats\u0026#34;) //扫描文档1次即匹配 ","date":1712534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712630683,"objectID":"44271ca707f556e0a5b1a5ea616323a9","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.4/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/3.4/","section":"courses","summary":" MongoDB支持多个字段的复合索引，复合索引支持匹配多个字段的查询。 for(var i=1; i\u003c10; i++) db.customers.insert({name:\"lanbo\"+i, country:\"Malaysia\"}) //增加测试数据 db.customers.find({country:\"Malaysia\"}).explain(\"executionStats\") //执行查询语句 此查询会扫描54个文档，全表扫描，匹配上的文档只有18个，没有用索引； db.customers.createIndex({country:1}) //增加索引 再执行查询语句可知，此查询会扫描18个文档，同时匹配18个； db.customers.createIndex({name:1,country:1}) //创建复合索引 db.customers.find({name:\"lanbo2\",country:\"Malaysia\"}).explain(\"executionStats\") //扫描文档1次即匹配 ","tags":null,"title":"3.4 复合索引","type":"book"},{"authors":null,"categories":null,"content":"3.5.1 数组的多键索引在B-Tree叶子节点上的排列样式 排列样式 3.5.2 嵌套文档多键索引 如果数组的元素值为一个嵌套文档，结构如下 嵌套文档 可以创建{StatusInfo.desc:1}的多键索引 db.Order.ensureIndex({StatusInfo.desc:1}) 创建图示 数组多键索引 ","date":1712534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712630704,"objectID":"4b547cb52a907f927777bef77add77b6","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.5/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/3.5/","section":"courses","summary":"3.5.1 数组的多键索引在B-Tree叶子节点上的排列样式 排列样式 3.5.2 嵌套文档多键索引 如果数组的元素值为一个嵌套文档，结构如下 嵌套文档 可以创建{StatusInfo.desc:1}的多键索引 db.Order.ensureIndex({StatusInfo.desc:1}) 创建图示 数组多键索引 ","tags":null,"title":"3.5 数组的多键索引","type":"book"},{"authors":null,"categories":null,"content":" 全文索引，在字符串或字符串数组上 db.profiles.createIndex({comments:\u0026#34;text\u0026#34;})\n地理位置索引 db.address.createIndex({\u0026#34;location\u0026#34;:\u0026#34;2dsphere\u0026#34;})//球面空间 db.address.createIndex({\u0026#34;location\u0026#34;:\u0026#34;2d\u0026#34;})//平面空间\nHash索引 db.address.createIndex({_id:\u0026#34;hashed\u0026#34;}) //利用hash函数计算字段的值\nTTL索引 db.log_event.createIndex({date:1},{expireAfterSeconds:600}) //10分钟后自动删除\n","date":1712534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712630719,"objectID":"c280a4f6bf94466725e323c169e060c0","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.6/","publishdate":"2024-04-08T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter3/3.6/","section":"courses","summary":"全文索引，在字符串或字符串数组上 db.profiles.createIndex({comments:\"text\"})\n地理位置索引 db.address.createIndex({\"location\":\"2dsphere\"})//球面空间 db.address.createIndex({\"location\":\"2d\"})//平面空间\nHash索引 db.address.createIndex({_id:\"hashed\"}) //利用hash函数计算字段的值\nTTL索引 db.log_event.createIndex({date:1},{expireAfterSeconds:600}) //10分钟后自动删除","tags":null,"title":"3.6 其他索引","type":"book"},{"authors":["沈凡凡"],"categories":null,"content":"致谢 | 2023年度《武汉大学学报（理学版）》 “突出贡献奖”“优秀青年编委”“优秀审稿人”“优秀论文”名单\n","date":1705968000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1706258425,"objectID":"df146b2bbbe91176be3b8fc7125f3f36","permalink":"https://fanfanshen.github.io/news/2024-reward-bestpaper/","publishdate":"2024-01-23T00:00:00Z","relpermalink":"/news/2024-reward-bestpaper/","section":"news","summary":"致谢 | 2023年度《武汉大学学报（理学版）》 “突出贡献奖”“优秀青年编委”“优秀审稿人”“优秀论文”名单","tags":null,"title":"Our paper was awarded the best paper of 2023 in 《武汉大学学报（理学版）》. Congratulations to Bofan Yang.","type":"news"},{"authors":["沈凡凡"],"categories":null,"content":"","date":1705449600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1706279011,"objectID":"50a5afbfd5cb97b25350d7eaa32fed37","permalink":"https://fanfanshen.github.io/news/2023-paper-ifalstm/","publishdate":"2024-01-17T00:00:00Z","relpermalink":"/news/2023-paper-ifalstm/","section":"news","summary":"","tags":null,"title":"Our paper \"基于iFA-LSTM的恶意行为检测方法\" is accepted by 计算机工程与科学(CCF-T2). Congratulations to Xingyi Tang.","type":"news"},{"authors":["沈凡凡"],"categories":null,"content":"恭喜课题组成员(史林)的论文被Computer Standards \u0026amp; Interfaces（中科院二区）期刊接收。\nTitle：BMSE: Blockchain-based multi-keyword searchable encryption for electronic medical records\n","date":1702512000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1702541468,"objectID":"7721eab169de4a3998e0ed954a26376e","permalink":"https://fanfanshen.github.io/news/2023-paper-csi/","publishdate":"2023-12-14T00:00:00Z","relpermalink":"/news/2023-paper-csi/","section":"news","summary":"恭喜课题组成员(史林)的论文被Computer Standards \u0026 Interfaces（中科院二区）期刊接收。\nTitle：BMSE: Blockchain-based multi-keyword searchable encryption for electronic medical records","tags":null,"title":"Our paper \"BMSE:Blockchain-based multi-keyword searchable encryption for electronic medical records\" is accepted by Computer Standards \u0026 Interfaces (中科院2区)","type":"news"},{"authors":["沈凡凡"],"categories":null,"content":"2023年11月2日应邀参加阿里云栖大会并做报告\n","date":1698883200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1706258425,"objectID":"686ef29a4b268fd9ea2f4074e5dd2e4e","permalink":"https://fanfanshen.github.io/news/2023-conf-aliyun/","publishdate":"2023-11-02T00:00:00Z","relpermalink":"/news/2023-conf-aliyun/","section":"news","summary":"2023年11月2日应邀参加阿里云栖大会并做报告","tags":null,"title":"应邀参加阿里云栖大会并做报告","type":"news"},{"authors":null,"categories":null,"content":"","date":1656633600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"724b20c3d126509d0ed7da9c4c93504c","permalink":"https://fanfanshen.github.io/project/22bigdata/","publishdate":"2022-07-01T00:00:00Z","relpermalink":"/project/22bigdata/","section":"project","summary":"主题：审计大数据高性能高可靠存储与计算技术","tags":["Research"],"title":"主持、江苏省高等学校自然科学研究重大项目(22KJA520004)，2022.7-2025.8","type":"project"},{"authors":["Fanfan Shen*","Chao Xu","Jun Zhang","Yong Chen","Yanxiang He"],"categories":[],"content":"","date":1638957643,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"8156a4a1e50ba774ea02dee98ff01018","permalink":"https://fanfanshen.github.io/publication/2021rldc/","publishdate":"2023-10-08T18:00:43+08:00","relpermalink":"/publication/2021rldc/","section":"publication","summary":"","tags":[],"title":"Reinforcement Learning based Data Compression for Energy-Efficient Non-volatile Caches","type":"publication"},{"authors":null,"categories":null,"content":"","date":1611619200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"e3f39d0d0fd3e18ffb79bea71387a919","permalink":"https://fanfanshen.github.io/project/22teaching/","publishdate":"2021-01-26T00:00:00Z","relpermalink":"/project/22teaching/","section":"project","summary":"主题：混合式教学模式创新.","tags":["Teaching"],"title":"主持、江苏省教育科学“十四五”规划重点课题(C-b/2021/01/26)、2022.1-2023.12","type":"project"},{"authors":[],"categories":[],"content":" 主持、国家自然科学基金(61902189)、2020.1-2022.12，已结题\n主持、江苏省自然科学基金(BK20180821)、2018.7-2021.6，已结题\n主持、江苏省高等学校自然科学研究面上项目(18KJB520026)、2018.9-2020.8，已结题\n主持、江苏省教育科学“十三五”规划重点课题(C-a/2018/01/09)、2018.6-2020.6，已结题\n","date":1602206936,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"153d02c6f622514fd3e9bcfe5ebefb09","permalink":"https://fanfanshen.github.io/project/others/","publishdate":"2020-10-09T09:28:56+08:00","relpermalink":"/project/others/","section":"project","summary":"国家自科，省自科，高校面上等","tags":["Research"],"title":"2022年以前的结题项目","type":"project"},{"authors":["Fanfan Shen","Chao Xu and Jun Zhang"],"categories":[],"content":"","date":1581156710,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"4b499d400c814cba481afbc11e32bf5e","permalink":"https://fanfanshen.github.io/publication/2020access/","publishdate":"2023-10-08T18:11:50+08:00","relpermalink":"/publication/2020access/","section":"publication","summary":"","tags":[],"title":"Statistical Behavior Guided Block Allocation in Hybrid Cache Based Edge Computing for Cyber-Physical-Social Systems","type":"publication"},{"authors":["Fanfan Shen*","Yanxiang He","Jun Zhang","Qingan Li","Jianhua Li","Chao Xu"],"categories":[],"content":"","date":1570529944,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"ae62b47c9ae4b63f649d31607d3d9e69","permalink":"https://fanfanshen.github.io/publication/2019cee/","publishdate":"2023-10-08T18:19:04+08:00","relpermalink":"/publication/2019cee/","section":"publication","summary":"","tags":[],"title":"Reuse Locality aware Cache Partitioning for Last-Level Cache","type":"publication"},{"authors":["Fanfan Shen","Yanxiang He","Jun Zhang","Chao Xu"],"categories":[],"content":"","date":1570529855,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"5a28ad14720c1067f0fd37002003db63","permalink":"https://fanfanshen.github.io/publication/2019js/","publishdate":"2023-10-08T18:17:35+08:00","relpermalink":"/publication/2019js/","section":"publication","summary":"","tags":[],"title":"Periodic Learning based Region Selection for Energy Efficient MLC STT-RAM Cache","type":"publication"},{"authors":null,"categories":null,"content":"mongod进程\nMongod.exe为启动此数据库实例进程对应的可执行文件，是整个MongoDB中最核心的内容，负责数据库的创建、删除等各项管理工作，运行在服务器端为客户端提供监听，相当于MySQL中的mysqld进程。 mongo进程\nMongo是一个与mongod进程进行交互的JavaScript Shell进程，它提供了一些交互的接口函数用于系统管理员对数据库系统进行管理。 其他进程\nmongodump提供了一种从mongod实例上导出BSON dump文件的方法，mongorestore能够利用这些dump文件重建数据库，常用命令格式如下： mongodump --port 50000 --db eshop --out e:\\bak 参数–port是mongod实例监听端口，–db是数据库名称，–out是备份文件保存目录， mongodump –help查看更多参数。 mongoexport是一个将MongoDB数据库实例中的数据导出来产生JSON或CVS文件的工具； mongoimport是一个将JSON或CVS文件内容导入到MongoDB实例中的工具； mongos是一个在分片中用到的进程。所以应用程序端的查询操作都会先由它分析，然后将查询定位到具体某一个分片上。 mongofiles提供一个操作MongoDB分布式文件存储系统的命令行接口。 mongostat提供一个展示当前正在运行的mongod实例的状态工具。 mongotop提供一个分析MongoDB实例花在读写数据上的时间跟踪方法。 ","date":1567987200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711811561,"objectID":"ba342d04f6098a20a5ea03f6abff632c","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.5/","publishdate":"2019-09-09T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/1.5/","section":"courses","summary":"mongod进程\nMongod.exe为启动此数据库实例进程对应的可执行文件，是整个MongoDB中最核心的内容，负责数据库的创建、删除等各项管理工作，运行在服务器端为客户端提供监听，相当于MySQL中的mysqld进程。 mongo进程\nMongo是一个与mongod进程进行交互的JavaScript Shell进程，它提供了一些交互的接口函数用于系统管理员对数据库系统进行管理。 其他进程\nmongodump提供了一种从mongod实例上导出BSON dump文件的方法，mongorestore能够利用这些dump文件重建数据库，常用命令格式如下： mongodump --port 50000 --db eshop --out e:\\bak 参数–port是mongod实例监听端口，–db是数据库名称，–out是备份文件保存目录， mongodump –help查看更多参数。 mongoexport是一个将MongoDB数据库实例中的数据导出来产生JSON或CVS文件的工具； mongoimport是一个将JSON或CVS文件内容导入到MongoDB实例中的工具； mongos是一个在分片中用到的进程。所以应用程序端的查询操作都会先由它分析，然后将查询定位到具体某一个分片上。 mongofiles提供一个操作MongoDB分布式文件存储系统的命令行接口。 mongostat提供一个展示当前正在运行的mongod实例的状态工具。 mongotop提供一个分析MongoDB实例花在读写数据上的时间跟踪方法。 ","tags":null,"title":"1.5几个重要的可执行文件","type":"book"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ### Charts Wowchemy supports the popular [Plotly](https://plot.ly/) format for interactive charts. Save your Plotly JSON in your page folder, for example `line-chart.json`, and then add the `{{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}}` shortcode where you would like the chart to appear. Demo: You might also find the [Plotly JSON Editor](http://plotly-json-editor.getforge.io/) useful. ### Math Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the `math` option in your `config/_default/params.yaml` file. To render _inline_ or _block_ math, wrap your LaTeX math with `{{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}}` or `{{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}`, respectively. (We wrap the LaTeX math in the Wowchemy _math_ shortcode to prevent Hugo rendering our math as Markdown. The _math_ shortcode is new in v5.5-dev.) Example **math block**: ```latex {{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701916630,"objectID":"9ffdabb80e2a1e7ef0294aebd370da69","permalink":"https://fanfanshen.github.io/news/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/news/writing-technical-content/","section":"news","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"news"},{"authors":null,"categories":null,"content":"MongoDB是一个可扩展、开源、表结构自由，用C++语言编写的面向文档的分布式文件存储的数据库，旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n1.1-1 数据库引擎综合排行榜：第5名数据来源：https://db-engines.com/en/ranking\n文档数据库排名第一：https://db-engines.com/en/ranking/document+store\n综合排行榜：第5名，数据来源：https://db-engines.com/en/ranking\n上述网站可查询最新数据\n1.1-2 MongoDB能支撑大数据系统\n实时的可操作的大数据存储系统 离线大数据分析系统 MongoDB天生为云计算而生\n可扩展架构，可以启用分片和水平扩展，提供云存储所需的技术； 自动管理被称为“副本集”的冗余服务器； MongoDB为多家领先的云计算供应商，如阿里巴巴，腾讯，360，百度\n1.1-3 关系数据库中最基本的单元是行，MongoDB中最基本的存储单元是document，如：\n1.1-4 用JSON格式类似的键值对来存储，值的类型有字符串、数字、日期等，也称BSON对象；\nMongoDB与关系数据库的重大区别是：可扩展的表结构，即collection中的document所拥有的字段是可以变化的\n1.1-5 ","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712636499,"objectID":"c7b5996d96304845521cdc42a6b1dc71","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.1/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/1.1/","section":"courses","summary":"MongoDB是一个可扩展、开源、表结构自由，用C++语言编写的面向文档的分布式文件存储的数据库，旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n1.1-1 数据库引擎综合排行榜：第5名数据来源：https://db-engines.com/en/ranking\n文档数据库排名第一：https://db-engines.com/en/ranking/document+store\n综合排行榜：第5名，数据来源：https://db-engines.com/en/ranking\n上述网站可查询最新数据\n1.1-2 MongoDB能支撑大数据系统\n实时的可操作的大数据存储系统 离线大数据分析系统 MongoDB天生为云计算而生\n可扩展架构，可以启用分片和水平扩展，提供云存储所需的技术； 自动管理被称为“副本集”的冗余服务器； MongoDB为多家领先的云计算供应商，如阿里巴巴，腾讯，360，百度\n1.1-3 关系数据库中最基本的单元是行，MongoDB中最基本的存储单元是document，如：\n1.1-4 用JSON格式类似的键值对来存储，值的类型有字符串、数字、日期等，也称BSON对象；\nMongoDB与关系数据库的重大区别是：可扩展的表结构，即collection中的document所拥有的字段是可以变化的\n1.1-5 ","tags":null,"title":"1.1MongoDB的发展与现状","type":"book"},{"authors":null,"categories":null,"content":" 1.2-1 根据 Gartner 调查，70%的 Hadoop大数据分析项目未能体现预期价值 随着业务的发展，实时数据处理场景变得越来越多，Hadoop这种更适合处理离线批量数据的技术变得不适应 因此需要引人新的NOSQL技术来应对这种场景，发挥大数据实时处理的优势 1.2-2 1.2-3 MongoDB可以替换HDFS,作为大数据平台中最核心的部分； 优势如下：\nHDFS以文件为单位，每个文件大小为64MB~128MB，MongoDB作为文档数据库则表现得更加细颗粒化 MongoDB支持HDFS所没有的索引概念，所以在读取速度上更快，MongoDB比HDFS 更加易于修改其写入后的数据。 HDFS 的响应级别为分钟，而MongoDB的响应级别为毫秒: 如果使用MongoDB数据库，就不用像传统模式那样，到Redis内存数据库计算后，再将其另存到HDFS上。 可以利用MongoDB强大的Aggregate功能进行数据筛选或预处理 1.2-4 ","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712636499,"objectID":"d2e33e36f9f4e5671c5c0c27520db6ce","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.2/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/1.2/","section":"courses","summary":" 1.2-1 根据 Gartner 调查，70%的 Hadoop大数据分析项目未能体现预期价值 随着业务的发展，实时数据处理场景变得越来越多，Hadoop这种更适合处理离线批量数据的技术变得不适应 因此需要引人新的NOSQL技术来应对这种场景，发挥大数据实时处理的优势 1.2-2 1.2-3 MongoDB可以替换HDFS,作为大数据平台中最核心的部分； 优势如下：\nHDFS以文件为单位，每个文件大小为64MB~128MB，MongoDB作为文档数据库则表现得更加细颗粒化 MongoDB支持HDFS所没有的索引概念，所以在读取速度上更快，MongoDB比HDFS 更加易于修改其写入后的数据。 HDFS 的响应级别为分钟，而MongoDB的响应级别为毫秒: 如果使用MongoDB数据库，就不用像传统模式那样，到Redis内存数据库计算后，再将其另存到HDFS上。 可以利用MongoDB强大的Aggregate功能进行数据筛选或预处理 1.2-4 ","tags":null,"title":"1.2MongoDB与Hadoop比较","type":"book"},{"authors":null,"categories":null,"content":" 关系数据库中常用的SQL在MongoDB中都有对应的解决方案，JOIN语句例外，不支持；\nMongoDB的特点：\n嵌套文档模型\n自由的表结构\n自带强大的计算框架，支持MapReduce、spark\n复制集保证数据高可靠性\n分片集群实现高可扩展性，实现海量数据的分布式存储\n多文档事务的支持，高并发能力\n","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711811561,"objectID":"728b018713b0f52f4c9def055fce332d","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.3/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/1.3/","section":"courses","summary":"关系数据库中常用的SQL在MongoDB中都有对应的解决方案，JOIN语句例外，不支持；\nMongoDB的特点：\n嵌套文档模型\n自由的表结构\n自带强大的计算框架，支持MapReduce、spark\n复制集保证数据高可靠性\n分片集群实现高可扩展性，实现海量数据的分布式存储\n多文档事务的支持，高并发能力","tags":null,"title":"1.3关键特性","type":"book"},{"authors":null,"categories":null,"content":"1.安装步骤\n下载地址：https://www.mongodb.com/download-center/community 版本4.4或更高版本；或者网盘下载：https://pan.baidu.com/s/15KwMqxcVFi8D6BpMBKNQkA?pwd=abt7 提取码: abt7 安装方法参考：https://www.runoob.com/mongodb/mongodb-window-install.html 安装过程中不要勾选MongoDB Compass（可视化环境），MongoDB单独安装。 2.配置数据和日志文件目录（自定义）\n创建数据目录：D:\\mongodb\\data\\db 创建日志目录：D:\\mongodb\\data\\log 创建日志文件：D:\\mongodb\\data\\log\\mongodb.log 3.安装成功与否测试\n启动服务器：\nC:\\Program Files\\MongoDB\\Server\\4.4\\bin\u0026gt;.\\mongod.exe --dbpath d:\\mongodb\\data\\db 看到日志倒数第二行：waiting for connections on port 27017\n浏览器输入：http://localhost:27017/\n1.4-1 出现上述情况，说明安装正常 4.MongoDB的后台管理shell（mongo进程）\nMongoDB Shell是MongoDB自带的交互式Javascript shell,用来对MongoDB进行操作和管理的交互式环境。\n进入安装目录bin下，运行mongo进程：\n`C:\\Program Files\\MongoDB\\Server\\4.4\\bin\u0026gt;.\\mongo.exe --port 27017` 默认连接到test数据库，可测试加法运算：\n1.4-2 ","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712636499,"objectID":"a35d54b68efc5dcf17c7d7ecbf34edf0","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.4/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/1.4/","section":"courses","summary":"1.安装步骤\n下载地址：https://www.mongodb.com/download-center/community 版本4.4或更高版本；或者网盘下载：https://pan.baidu.com/s/15KwMqxcVFi8D6BpMBKNQkA?pwd=abt7 提取码: abt7 安装方法参考：https://www.runoob.com/mongodb/mongodb-window-install.html 安装过程中不要勾选MongoDB Compass（可视化环境），MongoDB单独安装。 2.配置数据和日志文件目录（自定义）\n创建数据目录：D:\\mongodb\\data\\db 创建日志目录：D:\\mongodb\\data\\log 创建日志文件：D:\\mongodb\\data\\log\\mongodb.log 3.安装成功与否测试\n启动服务器：\nC:\\Program Files\\MongoDB\\Server\\4.4\\bin\u003e.\\mongod.exe --dbpath d:\\mongodb\\data\\db 看到日志倒数第二行：waiting for connections on port 27017\n浏览器输入：http://localhost:27017/\n1.4-1 出现上述情况，说明安装正常 4.MongoDB的后台管理shell（mongo进程）\nMongoDB Shell是MongoDB自带的交互式Javascript shell,用来对MongoDB进行操作和管理的交互式环境。","tags":null,"title":"1.4安装部署","type":"book"},{"authors":null,"categories":null,"content":"1.高并发web应用程序\nMongoDB支持无固定结构的表模型，容易增加和减少表中的字段，适应业务变化； MongoDB支持分片集群，很容易实现水平扩展，将数据分散到集群中的各个片上，提高了系统存储容量和读写吞吐量； “热数据”读并发高，放在内存中访问更快，MongoDB本身就支持内存映射数据文件。 1.6-1 2.实时计算类应用\n如实时营销，实时推荐； 1.6-2 3.数据中台\n1.6-3 4.游戏类应用\n装备、经验值进程变化 实时数据统计分析、促销等 5.日志分析类系统\n海量日志数据查询快 为大数据分析和决策提供支持 1.6-4 6.AI应用场景\n深度学习输入的数据集，如文本、图像、视频等快速变化 深度学习训练中添加隐藏层、特征标签、超参数和新的输入数据等 银行、电信、石油、汽车、智能家庭等场景 ","date":1557014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712636499,"objectID":"2db61d583760958099da38494ded7aec","permalink":"https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.6/","publishdate":"2019-05-05T00:00:00Z","relpermalink":"/courses/bigdatastorage/chapter1/1.6/","section":"courses","summary":"1.高并发web应用程序\nMongoDB支持无固定结构的表模型，容易增加和减少表中的字段，适应业务变化； MongoDB支持分片集群，很容易实现水平扩展，将数据分散到集群中的各个片上，提高了系统存储容量和读写吞吐量； “热数据”读并发高，放在内存中访问更快，MongoDB本身就支持内存映射数据文件。 1.6-1 2.实时计算类应用\n如实时营销，实时推荐； 1.6-2 3.数据中台\n1.6-3 4.游戏类应用\n装备、经验值进程变化 实时数据统计分析、促销等 5.日志分析类系统\n海量日志数据查询快 为大数据分析和决策提供支持 1.6-4 6.AI应用场景\n深度学习输入的数据集，如文本、图像、视频等快速变化 深度学习训练中添加隐藏层、特征标签、超参数和新的输入数据等 银行、电信、石油、汽车、智能家庭等场景 ","tags":null,"title":"1.6适合的业务","type":"book"},{"authors":["沈凡凡","何炎祥","张军","江南","李清安","李建华"],"categories":[],"content":"","date":1496917263,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"cff1eb4a9f298b57a9ddea5e9c7187b1","permalink":"https://fanfanshen.github.io/publication/2017computer/","publishdate":"2023-10-08T18:21:03+08:00","relpermalink":"/publication/2017computer/","section":"publication","summary":"","tags":[],"title":"一种SRAM辅助新型非易失性缓存的磨损均衡方法","type":"publication"},{"authors":["Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701863083,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://fanfanshen.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"}]