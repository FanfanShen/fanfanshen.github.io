<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fanfan Shen&#39;s Homepage</title>
    <link>https://fanfanshen.github.io/</link>
      <atom:link href="https://fanfanshen.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Fanfan Shen&#39;s Homepage</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 24 Oct 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://fanfanshen.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Fanfan Shen&#39;s Homepage</title>
      <link>https://fanfanshen.github.io/</link>
    </image>
    
    <item>
      <title>学术资源</title>
      <link>https://fanfanshen.github.io/library/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/library/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    查看资源
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;一在线数据库检索资源&#34;&gt;一、在线数据库检索资源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dblp.uni-trier.de/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DBLP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sci-hub.ren/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sci-hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scholar.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;谷歌学术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xueshu.baidu.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;百度学术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnki.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国知网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二学术刊物&#34;&gt;二、学术刊物&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ccf.org.cn/Academic_Evaluation/By_category/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国计算机学会推荐国际学术会议和期刊目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ccf.org.cn/Academic_Evaluation/By_category/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CCF发布计算领域高质量科技期刊分级目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cjc.ict.ac.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;计算机学报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.scichina.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中国科学(F)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jos.org.cn/jos/ch/index.aspx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;软件学报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ejournal.org.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;电子学报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aas.net.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;自动化学报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crad.ict.ac.cn/CN/1000-1239/home.shtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;计算机研究与发展&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三顶级会议期刊&#34;&gt;三、顶级会议/期刊&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FAST、USENIX ATC、PPOPP、MSST、MASCOTS、SYSTOR、TOS、TC、TPDS、VLDB&lt;/li&gt;
&lt;li&gt;偏系统：HPCA、ISCA、SOSP、OSDI、NSDI&lt;/li&gt;
&lt;li&gt;偏数据库：SIGMOD、ICDE、PVLDB、VLDBJ&lt;/li&gt;
&lt;li&gt;偏EDA：DAC、DATE、ICCD、ICCAD、ESWEEK&lt;/li&gt;
&lt;li&gt;人工智能：AAAI，CVPR，ICCV，ICML，IJCAI，TPAMI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有源代码的会议（见论文右上角的图标Artifact Evaluation）：FAST、USENIX ATC、SOSP、OSDI、HPCA、PPOPP&lt;/p&gt;
&lt;h2 id=&#34;四学者网站和学术资源&#34;&gt;四、学者网站和学术资源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;学者网站：
&lt;ul&gt;
&lt;li&gt;song han, MIT, site: &lt;a href=&#34;https://hanlab.mit.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hanlab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学术资源：
&lt;ul&gt;
&lt;li&gt;Rutgers Efficient AI (REFAI) Seminar, &lt;a href=&#34;https://sites.google.com/site/boyuaneecs/efficient-ai-seminar-talk?authuser=0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sites.google.com/site/boyuaneecs/efficient-ai-seminar-talk?authuser=0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;五科研方法&#34;&gt;五、科研方法&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>学生情况</title>
      <link>https://fanfanshen.github.io/students/member/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/students/member/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    欢迎研究生、本科生加入我们，一起学习，共同进步！联系邮箱：ffshen@nau.edu.cn
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;一指导学生情况&#34;&gt;一、指导学生情况&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2024，研究生：惠丽洁，Dynamic Grouping Scheme for Personalized Federated Meta-Learning，投稿中&lt;/li&gt;
&lt;li&gt;2024年4月，研究生：杨博帆获得2024年江苏省研究生实践创新计划项目，立项，资助1.5万元&lt;/li&gt;
&lt;li&gt;2024年4月，研究生：史林，BMSE: Blockchain-based multi-keyword searchable encryption for electronic medical records，Computer Standards &amp;amp; Interfaces(中科院2区)&lt;/li&gt;
&lt;li&gt;2023年7月，研究生：汤星译，基于iFA-LSTM的恶意行为检测方法，计算机工程与科学（北大核心录用），2024.1&lt;/li&gt;
&lt;li&gt;2023年6月，研究生：汤星译获得2023年江苏省研究生实践创新计划项目，立项，资助1.5万元&lt;/li&gt;
&lt;li&gt;2023年6月，研究生：刘海鹏获得2023年江苏省研究生实践创新计划项目，立项，资助1.5万元&lt;/li&gt;
&lt;li&gt;2023年3月，研究生：刘海鹏，基于AHP的多特征融合图像质量评价算法，计算机仿真（北大核心录用），appear in 2024&lt;/li&gt;
&lt;li&gt;2023年4月，研究生：杨博帆，基于深度强化学习的无人机矿井自主巡航研究，武汉大学学报（北大核心），2023.4(优秀论文)&lt;/li&gt;
&lt;li&gt;2022年6月，本科生：夏锐禹，校优秀本科生毕业设计，目前为北京工业大学硕士生&lt;/li&gt;
&lt;li&gt;2022年3月，研究生：史林，2022年度江苏省研究生科研与实践创新计划项目，立项，1.5万元&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;2023年，指导学生获得大学生创新创业训练计划项目，国家级，袁媛，颜敏杰，陶琴&lt;/li&gt;
&lt;li&gt;2023年，指导学生获得中国大学生服务外包创新创业大赛，省级三等奖2项&lt;/li&gt;
&lt;li&gt;2023年，指导学生获得蓝桥杯省二等奖&lt;/li&gt;
&lt;li&gt;2021年7月，指导学生获得中国大学生计算机设计大赛（14届），国家级，二等奖，学生：左量、吴子怡、许傲&lt;/li&gt;
&lt;li&gt;2021年5月，指导学生获得中国大学生计算机设计大赛，江苏省级，三等奖，学生：左量、吴子怡、许傲&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二在读研究生&#34;&gt;二、在读研究生&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2023级&lt;/strong&gt;：苏文璋，李倩倩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2022级&lt;/strong&gt;：杨博帆，梁琦玮，惠丽洁&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2021级&lt;/strong&gt;：史林，刘海鹏，汤星译&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三指导的本科生毕业生&#34;&gt;三、指导的本科生(毕业生)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2024届&lt;/strong&gt;：缪浩然（无锡海隆），秦子恒（中科创达），唐一宸（雄安联通），汤觉淇（江苏海隆软件），&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2023届&lt;/strong&gt;：常旭（南京公务员），周瑾（SHEIN），叶国绪（简睿捷软件），曹晨洋，陈一祺，索朗扎巴，陈燚（西南大学读研），陈健（南审读研），任翔宇（南审读研），杨聪（东华大学读研）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2022届&lt;/strong&gt;：叶风云（南京毕马威服务中心，优秀毕业论文），刘宇（风云再起），沈金泽（中国科学技术大学读研），张晓宇（博泰车联网），夏锐禹（北京工业大学读研，优秀毕业论文），唐钦（东北大学读研），章江林(南京国睿信维)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2021届&lt;/strong&gt;：刘浩，陈霖&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2.2删除操作</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.2/</link>
      <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.2/</guid>
      <description>&lt;h1 id=&#34;mongodb中基本命令&#34;&gt;MongoDB中基本命令&lt;/h1&gt;
&lt;h2 id=&#34;数据库删除操作&#34;&gt;数据库删除操作&lt;/h2&gt;
&lt;p&gt;deleteOne：从集合中删除一条文档记录&lt;br&gt;
deleteMany:批量删除集合中的文档记录&lt;br&gt;
&lt;strong&gt;语法&lt;/strong&gt;


















&lt;figure  id=&#34;figure-22-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.2-1.png&#34; alt=&#34;2.2-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.2-1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;语法解释&lt;/strong&gt;


















&lt;figure  id=&#34;figure-22-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.2-2.png&#34; alt=&#34;2.2-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.2-2
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2.3修改操作</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.3/</link>
      <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.3/</guid>
      <description>&lt;h1 id=&#34;mongodb中基本命令&#34;&gt;MongoDB中基本命令&lt;/h1&gt;
&lt;h2 id=&#34;数据库更新操作&#34;&gt;数据库更新操作&lt;/h2&gt;
&lt;p&gt;updateOne:修改单条文档记录，即使查询多条也只更新第一条&lt;br&gt;
updateMany：修改所有匹配的文档记录&lt;br&gt;
&lt;strong&gt;语法&lt;/strong&gt;


















&lt;figure  id=&#34;figure-23-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.3-1.png&#34; alt=&#34;2.3-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.3-1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;语法解释&lt;/strong&gt;


















&lt;figure  id=&#34;figure-23-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.3-2.png&#34; alt=&#34;2.3-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.3-2
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;数据库更新操作-1&#34;&gt;数据库更新操作&lt;/h2&gt;
&lt;p&gt;replaceOne: 将文档记录替换为一条新文档记录&lt;br&gt;
update：相当于前三条的集合，取决于第二个参数&lt;br&gt;
&lt;strong&gt;语法&lt;/strong&gt;


















&lt;figure  id=&#34;figure-23-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.3-3.png&#34; alt=&#34;2.3-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.3-3
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;语法解释&lt;/strong&gt;


















&lt;figure  id=&#34;figure-23-4&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.3-4.png&#34; alt=&#34;2.3-4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.3-4
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;数据库常用修改操作符&#34;&gt;数据库常用修改操作符&lt;/h2&gt;
&lt;p&gt;$unset表示删除集合字段；&lt;br&gt;
$rename将name重命名；$currentDate将字段的值修改为当前的时间；&lt;br&gt;
$mul将字段的值乘以一个数字；&lt;br&gt;
$min保留修改值和原值中最小的值；&lt;br&gt;
$max保留修改值和原值中最大的值；&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2.4查询操作</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.4/</link>
      <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.4/</guid>
      <description>&lt;h1 id=&#34;mongodb中基本命令&#34;&gt;MongoDB中基本命令&lt;/h1&gt;
&lt;h2 id=&#34;数据库查询操作&#34;&gt;数据库查询操作&lt;/h2&gt;
&lt;p&gt;查询操作（ find() ）:BSON结构数据&lt;br&gt;
&lt;strong&gt;语法&lt;/strong&gt;


















&lt;figure  id=&#34;figure-24-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.4-1.png&#34; alt=&#34;2.4-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.4-1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;语法解释&lt;/strong&gt;


















&lt;figure  id=&#34;figure-24-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.4-2.png&#34; alt=&#34;2.4-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.4-2
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;SQL与MongoDB&lt;/strong&gt;


















&lt;figure  id=&#34;figure-24-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.4-3.png&#34; alt=&#34;2.4-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.4-3
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;条件语法&lt;/strong&gt;&lt;br&gt;
1.查询文档find()，$and条件语法：&lt;br&gt;
对于单键：db.col.find({likes : {$lt :200, $gt : 100}})&lt;br&gt;
可以传入多个键(key)，每个键(key)以逗号隔开&lt;br&gt;
db.col.find({key1:value1, key2:value2}).pretty() &lt;br&gt;
db.collection.find({$and:[{key1:value1},{key2:value2}]}).pretty()&lt;br&gt;
2.查询文档find()，$or条件语法：&lt;br&gt;
db.collection.find({$or:[{key1:value1},{key2:value2}]}).pretty()&lt;br&gt;
3.查询文档find()，$not条件语法，非运算：&lt;br&gt;
4.查询文档find()，$exists: 是否包含某个字段&lt;br&gt;
{field:{$exists:&lt;boolean&gt;}}，true返回包含field字段的文档记录，false返回不包含该字段的记录
5.查询文档find()，$text: 文本查询&lt;br&gt;
返回匹配文本的记录&lt;br&gt;
6.查询文档find()，$regex: 正则表达式&lt;br&gt;
7.查询文档find()，嵌套文档查询，orders.item&lt;br&gt;
8.查询文档find()，支持地理位置查询&lt;br&gt;
&lt;strong&gt;数组操作&lt;/strong&gt;&lt;br&gt;
1.精确匹配数组值&lt;br&gt;
2.匹配数组中的一个元素值&lt;br&gt;
3.匹配指定位置的元素值&lt;br&gt;
4.指定数组索引并匹配嵌套文档中的字段值&lt;br&gt;


















&lt;figure  id=&#34;figure-24-4&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.4-4.png&#34; alt=&#34;2.4-4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.4-4
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;


















&lt;figure  id=&#34;figure-24-5&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.4-5.png&#34; alt=&#34;2.4-5&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.4-5
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;strong&gt;查询投射&lt;/strong&gt;&lt;br&gt;
返回匹配文档的指定字段；&lt;br&gt;
好处：减少返回数据到客户端的网络流量
&lt;strong&gt;查询示例&lt;/strong&gt;&lt;br&gt;


















&lt;figure  id=&#34;figure-24-6&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.4-6.png&#34; alt=&#34;2.4-6&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.4-6
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2.4查询操作</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.5/</link>
      <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.5/</guid>
      <description>&lt;h1 id=&#34;mongodb中基本命令&#34;&gt;MongoDB中基本命令&lt;/h1&gt;
&lt;h2 id=&#34;数据库批量写操作&#34;&gt;数据库批量写操作&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;解释&lt;/strong&gt;&lt;br&gt;
MongoDB支持将插入操作、修改操作、删除操作放在一个bulkwrite之中。执行批量写操作。即多种操作同时进行。&lt;br&gt;
&lt;strong&gt;语法&lt;/strong&gt;
语法格式如下：orderd是否按顺序执行


















&lt;figure  id=&#34;figure-21-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.1-1.png&#34; alt=&#34;2.1-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.1-1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2.1插入操作</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.1/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter2/2.1/</guid>
      <description>&lt;h1 id=&#34;mongodb中概念对比&#34;&gt;MongoDB中概念对比&lt;/h1&gt;


















&lt;figure  id=&#34;figure-21-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter2/images/2.1-1.png&#34; alt=&#34;2.1-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      2.1-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;h1 id=&#34;mongodb中基本命令&#34;&gt;MongoDB中基本命令&lt;/h1&gt;
&lt;h2 id=&#34;启动数据库命令&#34;&gt;启动数据库命令&lt;/h2&gt;
&lt;p&gt;mongod:启动服务器&lt;br&gt;
mongo.exe:启动客户端&lt;br&gt;
6.0以后版本输入mongosh即可同时开启&lt;/p&gt;
&lt;h2 id=&#34;数据库操作命令&#34;&gt;数据库操作命令&lt;/h2&gt;
&lt;p&gt;use DATABASE //如果数据库不存在，则创建数据库，否则切换到指定数据库。&lt;br&gt;
show dbs // 命令可以显示所有数据的列表。&lt;br&gt;
db // 命令可以显示当前数据库对象或集合。&lt;br&gt;
use runoob&lt;br&gt;
show dbs // 未显示runoob,插入数据runoob才显示&lt;br&gt;
db.runoob.insert({&amp;ldquo;name&amp;rdquo;:“helloword&amp;quot;})&lt;br&gt;
db.dropDatabase() //删除当前使用的数据库&lt;/p&gt;
&lt;h2 id=&#34;数据库创建集合命令&#34;&gt;数据库创建集合命令&lt;/h2&gt;
&lt;p&gt;db.createCollection(“customers”) //创建集合&lt;/p&gt;
&lt;h2 id=&#34;数据库删除集合命令&#34;&gt;数据库删除集合命令&lt;/h2&gt;
&lt;p&gt;db.collection.drop() //将collection替换为某个待删除的集合&lt;/p&gt;
&lt;h2 id=&#34;数据库插入操作命令&#34;&gt;数据库插入操作命令&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：db.COLLECTION_NAME.insert(document)&lt;br&gt;
&lt;strong&gt;注意点&lt;/strong&gt;：&lt;br&gt;
1、第一次插入数据时，不需要预先创建COLLECTION_NAME，插入数据时，会自动创建&lt;br&gt;
2、每次插入数据若没显示指定字段“_id”，则会默认创建一个主键“_id”，为ObjectId类型，好处是支持分布式存储。
3、在MongoDB中，每一个集合都必须有一个“_id”字段，不管是自动生成还是指定的，值必须唯一；&lt;br&gt;
4、如果插入重复值将会抛出异常&lt;/p&gt;
&lt;p&gt;###直接插入
db.users.insert({title: ‘MongoDB’, tags: ‘good’})&lt;br&gt;
db.users.find() //查看文档
###将数据定义为一个document变量
document= ({title: ‘MongoDB’, tags: ‘good’})
db.users.insert(document)
###其他语法
db.collection.insertOne():向指定集合中插入一条文档数据&lt;br&gt;
db.collection.insertMany([{d1},{d2}&amp;hellip;]):向指定集合中插入多条文档数据，参数为数组&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>3.1 创建索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.1/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.1/</guid>
      <description>&lt;h2 id=&#34;索引的创建方法&#34;&gt;索引的创建方法&lt;/h2&gt;
&lt;h3 id=&#34;语法格式&#34;&gt;语法格式：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db.**collection.** createIndex(keys, options)- Key值为你要创建的索引字段，1为按升序创建索引，如果你想按降序来创建索引指定为-1即可&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;3.0.0版本前创建索引方法为 db.collection.ensureIndex()，之后的版本使用了 db.collection.createIndex() 方法，ensureIndex() 还能用，但只是 createIndex() 的别名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;例如：db.col.createIndex({&amp;ldquo;title&amp;rdquo;:1})&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查询创建的索引&#34;&gt;查询创建的索引：&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;db.customers.getIndexes()&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;createindex可选参数参考表&#34;&gt;createIndex()可选参数参考表&lt;/h3&gt;


















&lt;figure  id=&#34;figure-可选参数参考表&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%871.png&#34; alt=&#34;可选参数参考表&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      可选参数参考表
    &lt;/figcaption&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>3.2 删除索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.2/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.2/</guid>
      <description>&lt;h2 id=&#34;321-索引的删除方法&#34;&gt;3.2.1 索引的删除方法&lt;/h2&gt;
&lt;h3 id=&#34;语法格式如下&#34;&gt;语法格式如下：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db.collection.dropIndex(“索引名称”) //删除集合指定索引&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：db.user.dropIndex({id:1})&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db.col.dropIndexes() //删除集合所有索引&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;获取更多命令可以输入dbcollection后双击tab键&#34;&gt;获取更多命令，可以输入db.collection.后双击Tab键。&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>3.3 单字段索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.3/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.3/</guid>
      <description>&lt;h2 id=&#34;331-了解单字段索引&#34;&gt;3.3.1 了解单字段索引&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MongoDB默认为所有集合都创建了一个 &lt;strong&gt;_id字段的单字段索引，而且这个索引是唯一的，不能删除&lt;/strong&gt; ；&lt;/li&gt;
&lt;li&gt;_id字段作为一个集合的主键，值是唯一的；&lt;/li&gt;
&lt;li&gt;对于一个集合来说，也可以在其他字段上创建单字段的唯一索引；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;332-创建单字段索引准备工作&#34;&gt;3.3.2 创建单字段索引准备工作&lt;/h2&gt;
&lt;p&gt;准备测试数据:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(var i=1;i&amp;lt;10;i++) db.customers.insert({name:&amp;#34;jordan&amp;#34;+i,country:&amp;#34;American&amp;#34;})
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(var i=1;i&amp;lt;10;i++) db.customers.insert({name:&amp;#34;gaga&amp;#34;+i,country:&amp;#34;American&amp;#34;})
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(var i=1;i&amp;lt;10;i++) db.customers.insert({name:&amp;#34;ham&amp;#34;+i,country:&amp;#34;UK&amp;#34;})
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(var i=1;i&amp;lt;10;i++) db.customers.insert({name:&amp;#34;brown&amp;#34;+i,country:&amp;#34;UK&amp;#34;})
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(var i=1; i&amp;lt;10; i++)  db.customers.insert({name:&amp;#34;ramda&amp;#34;+i, country:&amp;#34;Malaysia&amp;#34;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注：删除上一章添加的customers数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;333-创建单字段唯一索引&#34;&gt;3.3.3 创建单字段唯一索引&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;db.customers.createIndex({name:1},{unique:true})&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引创建成功后可通过如下语句查询增加的索引：
&lt;code&gt;db.customers.getIndexes()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;v表示索引的版本；
key表示索引建立在哪个字段上；
1表示索引按照升序排列；
ns索引所在的命名空间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果如图&lt;/p&gt;


















&lt;figure  id=&#34;figure-显示单字段索引&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%872.png&#34; alt=&#34;显示单字段索引&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      显示单字段索引
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;索引查询效率分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;db.customers.find({name:&amp;quot;ramda9&amp;quot;}).explain(&amp;quot;executionStats&amp;quot;) //使用索引字段作为查询选择器 &lt;/code&gt;
&lt;code&gt;db.customers.find({country:&amp;quot;Malaysia&amp;quot;}).explain(&amp;quot;executionStats&amp;quot;) //不使用索引字段作为查询选择器&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用索引：&lt;/p&gt;


















&lt;figure  id=&#34;figure-使用索引&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%873.png&#34; alt=&#34;使用索引&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      使用索引
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;不使用索引：&lt;/p&gt;


















&lt;figure  id=&#34;figure-不使用索引&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%874.png&#34; alt=&#34;不使用索引&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      不使用索引
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;totalKeysExamined：遍历索引的次数
totalDocsExamined：遍历文档的次数
executionTimeMillis：预测需要执行的时间&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>3.4 复合索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.4/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.4/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;MongoDB支持多个字段的复合索引，复合索引支持匹配多个字段的查询。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(var i=1; i&amp;lt;10; i++)  db.customers.insert({name:&amp;#34;lanbo&amp;#34;+i, country:&amp;#34;Malaysia&amp;#34;}) //增加测试数据
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;db.customers.find({country:&amp;#34;Malaysia&amp;#34;}).explain(&amp;#34;executionStats&amp;#34;)  //执行查询语句
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;此查询会扫描54个文档，全表扫描，匹配上的文档只有18个，没有用索引；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;db.customers.createIndex({country:1}) //增加索引
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;再执行查询语句可知，此查询会扫描18个文档，同时匹配18个；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;db.customers.createIndex({name:1,country:1}) //创建复合索引
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;db.customers.find({name:&amp;#34;lanbo2&amp;#34;,country:&amp;#34;Malaysia&amp;#34;}).explain(&amp;#34;executionStats&amp;#34;) //扫描文档1次即匹配
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>3.5 数组的多键索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.5/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.5/</guid>
      <description>&lt;h2 id=&#34;351-数组的多键索引在b-tree叶子节点上的排列样式&#34;&gt;3.5.1 数组的多键索引在B-Tree叶子节点上的排列样式&lt;/h2&gt;


















&lt;figure  id=&#34;figure-排列样式&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%875.png&#34; alt=&#34;排列样式&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      排列样式
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&#34;352-嵌套文档多键索引&#34;&gt;3.5.2 嵌套文档多键索引&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如果数组的元素值为一个嵌套文档，结构如下&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-嵌套文档&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%876.png&#34; alt=&#34;嵌套文档&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      嵌套文档
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;可以创建{StatusInfo.desc:1}的多键索引
&lt;code&gt;db.Order.ensureIndex({StatusInfo.desc:1})&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;创建图示&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-数组多键索引&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter3/images/%e5%9b%be%e7%89%877.png&#34; alt=&#34;数组多键索引&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      数组多键索引
    &lt;/figcaption&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>3.6 其他索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.6/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter3/3.6/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;全文索引，在字符串或字符串数组上
&lt;code&gt;db.profiles.createIndex({comments:&amp;quot;text&amp;quot;})&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;地理位置索引
&lt;code&gt;db.address.createIndex({&amp;quot;location&amp;quot;:&amp;quot;2dsphere&amp;quot;})//球面空间&lt;/code&gt;
&lt;code&gt;db.address.createIndex({&amp;quot;location&amp;quot;:&amp;quot;2d&amp;quot;})//平面空间&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hash索引
&lt;code&gt;db.address.createIndex({_id:&amp;quot;hashed&amp;quot;}) //利用hash函数计算字段的值&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TTL索引
&lt;code&gt;db.log_event.createIndex({date:1},{expireAfterSeconds:600}) //10分钟后自动删除&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Our paper was awarded the best paper of 2023 in 《武汉大学学报（理学版）》. Congratulations to Bofan Yang.</title>
      <link>https://fanfanshen.github.io/news/2024-reward-bestpaper/</link>
      <pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/news/2024-reward-bestpaper/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://xblx.whu.edu.cn/zh/news/142850/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;致谢 | 2023年度《武汉大学学报（理学版）》 “突出贡献奖”“优秀青年编委”“优秀审稿人”“优秀论文”名单&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Our paper &#34;基于iFA-LSTM的恶意行为检测方法&#34; is accepted by 计算机工程与科学(CCF-T2). Congratulations to Xingyi Tang.</title>
      <link>https://fanfanshen.github.io/news/2023-paper-ifalstm/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/news/2023-paper-ifalstm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Our paper &#34;BMSE:Blockchain-based multi-keyword searchable encryption for electronic medical records&#34; is accepted by Computer Standards &amp; Interfaces (中科院2区)</title>
      <link>https://fanfanshen.github.io/news/2023-paper-csi/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/news/2023-paper-csi/</guid>
      <description>&lt;p&gt;恭喜课题组成员(史林)的论文被Computer Standards &amp;amp; Interfaces（中科院二区）期刊接收。&lt;/p&gt;
&lt;p&gt;Title：BMSE: Blockchain-based multi-keyword searchable encryption for electronic medical records&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>应邀参加阿里云栖大会并做报告</title>
      <link>https://fanfanshen.github.io/news/2023-conf-aliyun/</link>
      <pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/news/2023-conf-aliyun/</guid>
      <description>&lt;p&gt;2023年11月2日应邀参加阿里云栖大会并做报告&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>主持、江苏省高等学校自然科学研究重大项目(22KJA520004)，2022.7-2025.8</title>
      <link>https://fanfanshen.github.io/project/22bigdata/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/project/22bigdata/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Reinforcement Learning based Data Compression for Energy-Efficient Non-volatile Caches</title>
      <link>https://fanfanshen.github.io/publication/2021rldc/</link>
      <pubDate>Wed, 08 Dec 2021 18:00:43 +0800</pubDate>
      <guid>https://fanfanshen.github.io/publication/2021rldc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>主持、江苏省教育科学“十四五”规划重点课题(C-b/2021/01/26)、2022.1-2023.12</title>
      <link>https://fanfanshen.github.io/project/22teaching/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/project/22teaching/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2022年以前的结题项目</title>
      <link>https://fanfanshen.github.io/project/others/</link>
      <pubDate>Fri, 09 Oct 2020 09:28:56 +0800</pubDate>
      <guid>https://fanfanshen.github.io/project/others/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;主持、国家自然科学基金(61902189)、2020.1-2022.12，已结题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主持、江苏省自然科学基金(BK20180821)、2018.7-2021.6，已结题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主持、江苏省高等学校自然科学研究面上项目(18KJB520026)、2018.9-2020.8，已结题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主持、江苏省教育科学“十三五”规划重点课题(C-a/2018/01/09)、2018.6-2020.6，已结题&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Statistical Behavior Guided Block Allocation in Hybrid Cache Based Edge Computing for Cyber-Physical-Social Systems</title>
      <link>https://fanfanshen.github.io/publication/2020access/</link>
      <pubDate>Sat, 08 Feb 2020 18:11:50 +0800</pubDate>
      <guid>https://fanfanshen.github.io/publication/2020access/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Reuse Locality aware Cache Partitioning for Last-Level Cache</title>
      <link>https://fanfanshen.github.io/publication/2019cee/</link>
      <pubDate>Tue, 08 Oct 2019 18:19:04 +0800</pubDate>
      <guid>https://fanfanshen.github.io/publication/2019cee/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Periodic Learning based Region Selection for Energy Efficient MLC STT-RAM Cache</title>
      <link>https://fanfanshen.github.io/publication/2019js/</link>
      <pubDate>Tue, 08 Oct 2019 18:17:35 +0800</pubDate>
      <guid>https://fanfanshen.github.io/publication/2019js/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1.5几个重要的可执行文件</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.5/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;mongod进程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mongod.exe为启动此数据库实例进程对应的可执行文件，是整个MongoDB中最核心的内容，负责数据库的创建、删除等各项管理工作，运行在服务器端为客户端提供监听，相当于MySQL中的mysqld进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;mongo进程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mongo是一个与mongod进程进行交互的JavaScript Shell进程，它提供了一些交互的接口函数用于系统管理员对数据库系统进行管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;其他进程&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;mongodump提供了一种从mongod实例上导出BSON dump文件的方法，mongorestore能够利用这些dump文件重建数据库，常用命令格式如下：
&lt;code&gt;mongodump --port 50000 --db eshop --out e:\bak&lt;/code&gt;
参数&amp;ndash;port是mongod实例监听端口，&amp;ndash;db是数据库名称，&amp;ndash;out是备份文件保存目录， mongodump &amp;ndash;help查看更多参数。&lt;/li&gt;
&lt;li&gt;mongoexport是一个将MongoDB数据库实例中的数据导出来产生JSON或CVS文件的工具；&lt;/li&gt;
&lt;li&gt;mongoimport是一个将JSON或CVS文件内容导入到MongoDB实例中的工具；&lt;/li&gt;
&lt;li&gt;mongos是一个在分片中用到的进程。所以应用程序端的查询操作都会先由它分析，然后将查询定位到具体某一个分片上。&lt;/li&gt;
&lt;li&gt;mongofiles提供一个操作MongoDB分布式文件存储系统的命令行接口。&lt;/li&gt;
&lt;li&gt;mongostat提供一个展示当前正在运行的mongod实例的状态工具。&lt;/li&gt;
&lt;li&gt;mongotop提供一个分析MongoDB实例花在读写数据上的时间跟踪方法。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Markdown</title>
      <link>https://fanfanshen.github.io/news/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/news/writing-technical-content/</guid>
      <description>&lt;p&gt;Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Wowchemy.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the &lt;code&gt;syntax_highlighter&lt;/code&gt; option in your &lt;code&gt;config/_default/params.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;data.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mindmaps&#34;&gt;Mindmaps&lt;/h3&gt;
&lt;p&gt;Wowchemy supports a Markdown extension for mindmaps.&lt;/p&gt;
&lt;p&gt;Simply insert a Markdown &lt;code&gt;markmap&lt;/code&gt; code block and optionally set the height of the mindmap as shown in the example below.&lt;/p&gt;
&lt;p&gt;A simple mindmap defined as a Markdown list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;
&lt;code&gt;
```markmap {height=&#34;200px&#34;}
- Hugo Modules
  - wowchemy
  - wowchemy-plugins-netlify
  - wowchemy-plugins-netlify-cms
  - wowchemy-plugins-reveal
```
&lt;/code&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;markmap&#34; style=&#34;height: 200px;&#34;&gt;

&lt;pre&gt;- Hugo Modules
  - wowchemy
  - wowchemy-plugins-netlify
  - wowchemy-plugins-netlify-cms
  - wowchemy-plugins-reveal&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A more advanced mindmap with formatting, code blocks, and math:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;
&lt;code&gt;
```markmap
- Mindmaps
  - Links
    - [Wowchemy Docs](https://wowchemy.com/docs/)
    - [Discord Community](https://discord.gg/z8wNYzb)
    - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes)
  - Features
    - Markdown formatting
    - **inline** ~~text~~ *styles*
    - multiline
      text
    - `inline code`
    -
      ```js
      console.log(&#39;hello&#39;);
      console.log(&#39;code block&#39;);
      ```
    - Math: $x = {-b \pm \sqrt{b^2-4ac} \over 2a}$
```
&lt;/code&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;markmap&#34; style=&#34;height: 500px;&#34;&gt;

&lt;pre&gt;- Mindmaps
  - Links
    - [Wowchemy Docs](https://wowchemy.com/docs/)
    - [Discord Community](https://discord.gg/z8wNYzb)
    - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes)
  - Features
    - Markdown formatting
    - **inline** ~~text~~ *styles*
    - multiline
      text
    - `inline code`
    -
      ```js
      console.log(&#39;hello&#39;);
      console.log(&#39;code block&#39;);&lt;/pre&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;- Math: $x = {-b \pm \sqrt{b^2-4ac} \over 2a}$
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;### Charts
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Wowchemy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;supports&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;popular&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Plotly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;charts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Save&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;your&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Plotly&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;your&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;page&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;folder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;line-chart&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shortcode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;you&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;would&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;appear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;



&lt;div id=&#34;chart-654782931&#34; class=&#34;chart&#34;&gt;&lt;/div&gt;
&lt;script&gt;
  (function() {
    let a = setInterval( function() {
      if ( typeof window.Plotly === &#39;undefined&#39; ) {
        return;
      }
      clearInterval( a );

      Plotly.d3.json(&#34;./line-chart.json&#34;, function(chart) {
        Plotly.plot(&#39;chart-654782931&#39;, chart.data, chart.layout, {responsive: true});
      });
    }, 500 );
  })();
&lt;/script&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;You&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;might&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;also&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Plotly&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Editor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plotly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;editor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getforge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;useful&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;### Math
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Wowchemy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;supports&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Markdown&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extension&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LaTeX&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;You&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;can&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;feature&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toggling&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;your&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yaml&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;To&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_inline_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;or&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_block_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wrap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;your&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LaTeX&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;${{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;or&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}$$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$${{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;respectively&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;We&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wrap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LaTeX&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Wowchemy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_math_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shortcode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prevent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rendering&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;our&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Markdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;The&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_math_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shortcode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;```&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;latex&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gamma_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;frac&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mathbf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mathbf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nabla&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mathbf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nabla&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mathbf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}{\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nabla&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mathbf&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nabla&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mathbf&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;



$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$

&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;{{&amp;lt; math &amp;gt;}}$\nabla F(\mathbf{x}_{n})${{&amp;lt; /math &amp;gt;}}&lt;/code&gt; renders as 

$\nabla F(\mathbf{x}_{n})$.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the math linebreak (&lt;code&gt;\\&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;{{&lt;/span&gt;&amp;lt; math &amp;gt;&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sb&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;k;p_{&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}^{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{cases}p_{&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}^{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;} &amp;amp; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\text&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{if }k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;p_{&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}^{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;} &amp;amp; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\text&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{if }k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{cases}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;{{&lt;/span&gt;&amp;lt; /math &amp;gt;&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;




$$
f(k;p_{0}^{*}) = \begin{cases}p_{0}^{*} &amp; \text{if }k=1, \\
1-p_{0}^{*} &amp; \text{if }k=0.\end{cases}
$$


&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;p&gt;Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;
&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;graph TD
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
&lt;/div&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;sequenceDiagram
Alice-&gt;&gt;John: Hello John, how are you?
loop Healthcheck
    John-&gt;&gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&gt;&gt;Alice: Great!
John-&gt;&gt;Bob: How about you?
Bob--&gt;&gt;John: Jolly good!
&lt;/div&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
&lt;/div&gt;
&lt;p&gt;An example &lt;strong&gt;class diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
Class08 &amp;lt;--&amp;gt; C2: Cool label
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;classDiagram
Class01 &lt;|-- AveryLongClass : Cool
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 --&gt; C2 : Where am i?
Class09 --* C3
Class09 --|&gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
Class08 &lt;--&gt; C2: Cool label
&lt;/div&gt;
&lt;p&gt;An example &lt;strong&gt;state diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;stateDiagram
[*] --&gt; Still
Still --&gt; [*]
Still --&gt; Moving
Moving --&gt; Still
Moving --&gt; Crash
Crash --&gt; [*]
&lt;/div&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;
&lt;p&gt;You can even write your todo lists in Markdown too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;- [x]&lt;/span&gt; Write math example
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;- [x]&lt;/span&gt; Write diagram example
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;- [ ]&lt;/span&gt; Do something else
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write math example
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write diagram example&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;
&lt;p&gt;Save your spreadsheet as a CSV file in your page&amp;rsquo;s folder and then render it by adding the &lt;em&gt;Table&lt;/em&gt; shortcode to your page:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;results.csv&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;caption&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Table 1: My results&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;













  



&lt;table class=&#34;table&#34;&gt;
  
    
    
    &lt;tr&gt;  &lt;th&gt;customer_id&lt;/th&gt;  &lt;th&gt;score&lt;/th&gt;  &lt;/tr&gt;
  
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;number&#34;&gt;1&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;number&#34;&gt;0&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;number&#34;&gt;2&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34;&gt;0.5&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;number&#34;&gt;3&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;number&#34;&gt;1&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
  
    &lt;caption&gt;Table 1: My results&lt;/caption&gt;
  
&lt;/table&gt;

&lt;h3 id=&#34;callouts&#34;&gt;Callouts&lt;/h3&gt;
&lt;p&gt;Academic supports a &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/#callouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode for callouts&lt;/a&gt;, also referred to as &lt;em&gt;asides&lt;/em&gt;, &lt;em&gt;hints&lt;/em&gt;, or &lt;em&gt;alerts&lt;/em&gt;. By wrapping a paragraph in &lt;code&gt;{{% callout note %}} ... {{% /callout %}}&lt;/code&gt;, it will render as an aside.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{% callout note %}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{% /callout %}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;spoilers&#34;&gt;Spoilers&lt;/h3&gt;
&lt;p&gt;Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;spoiler&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Click to view the spoiler&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;You found me!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spoiler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Click to view the spoiler&lt;/summary&gt;
  &lt;p&gt;You found me!&lt;/p&gt;
&lt;/details&gt;
&lt;h3 id=&#34;icons&#34;&gt;Icons&lt;/h3&gt;
&lt;p&gt;Academic enables you to use a wide range of &lt;a href=&#34;https://wowchemy.com/docs/getting-started/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons from &lt;em&gt;Font Awesome&lt;/em&gt; and &lt;em&gt;Academicons&lt;/em&gt;&lt;/a&gt; in addition to &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;emojis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples using the &lt;code&gt;icon&lt;/code&gt; shortcode to render icons:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;icon&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;terminal&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fas&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}} Terminal  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;icon&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fab&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}} Python  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;icon&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;r-project&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fab&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}} R
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-terminal  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Terminal&lt;br&gt;

  &lt;i class=&#34;fab fa-python  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Python&lt;br&gt;

  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; R&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>1.1MongoDB的发展与现状</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.1/</guid>
      <description>&lt;p&gt;MongoDB是一个可扩展、开源、表结构自由，用C++语言编写的&lt;strong&gt;面向文档&lt;/strong&gt;的分布式文件存储的数据库，旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。&lt;/p&gt;
&lt;p&gt;MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。&lt;/p&gt;


















&lt;figure  id=&#34;figure-11-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.1-1.png&#34; alt=&#34;1.1-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.1-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;数据库引擎综合排行榜：第5名数据来源：https://db-engines.com/en/ranking&lt;/p&gt;
&lt;p&gt;文档数据库排名第一：https://db-engines.com/en/ranking/document+store&lt;/p&gt;
&lt;p&gt;综合排行榜：第5名，数据来源：https://db-engines.com/en/ranking&lt;/p&gt;
&lt;p&gt;上述网站可查询最新数据&lt;/p&gt;


















&lt;figure  id=&#34;figure-11-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.1-2.png&#34; alt=&#34;1.1-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.1-2
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;MongoDB能支撑大数据系统&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实时的可操作的大数据存储系统&lt;/li&gt;
&lt;li&gt;离线大数据分析系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;MongoDB天生为云计算而生&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可扩展架构，可以启用分片和水平扩展，提供云存储所需的技术；&lt;/li&gt;
&lt;li&gt;自动管理被称为“副本集”的冗余服务器；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MongoDB为多家领先的云计算供应商，如阿里巴巴，腾讯，360，百度&lt;/p&gt;


















&lt;figure  id=&#34;figure-11-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.1-3.png&#34; alt=&#34;1.1-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.1-3
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;关系数据库中最基本的单元是行，MongoDB中最基本的存储单元是document，如：&lt;/p&gt;


















&lt;figure  id=&#34;figure-11-4&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.1-4.png&#34; alt=&#34;1.1-4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.1-4
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;用JSON格式类似的键值对来存储，值的类型有字符串、数字、日期等，也称BSON对象；&lt;/p&gt;
&lt;p&gt;MongoDB与关系数据库的重大区别是：可扩展的表结构，即collection中的document所拥有的字段是可以变化的&lt;/p&gt;


















&lt;figure  id=&#34;figure-11-5&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.1-5.png&#34; alt=&#34;1.1-5&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.1-5
    &lt;/figcaption&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>1.2MongoDB与Hadoop比较</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.2/</guid>
      <description>

















&lt;figure  id=&#34;figure-12-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.2-1.png&#34; alt=&#34;1.2-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.2-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;根据 Gartner 调查，70%的 Hadoop大数据分析项目未能体现预期价值&lt;/li&gt;
&lt;li&gt;随着业务的发展，实时数据处理场景变得越来越多，Hadoop这种更适合处理离线批量数据的技术变得不适应&lt;/li&gt;
&lt;li&gt;因此需要引人新的NOSQL技术来应对这种场景，发挥大数据实时处理的优势&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-12-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.2-2.png&#34; alt=&#34;1.2-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.2-2
    &lt;/figcaption&gt;&lt;/figure&gt;



















&lt;figure  id=&#34;figure-12-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.2-3.png&#34; alt=&#34;1.2-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.2-3
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB可以替换HDFS,作为大数据平台中最核心的部分；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优势如下：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HDFS以文件为单位，每个文件大小为64MB~128MB，MongoDB作为文档数据库则表现得更加细&lt;strong&gt;颗粒化&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MongoDB支持HDFS所没有的索引概念，所以在&lt;strong&gt;读取速度上更快&lt;/strong&gt;，MongoDB比HDFS 更加易于修改其写入后的数据。&lt;/li&gt;
&lt;li&gt;HDFS 的响应级别为分钟，而MongoDB的响应级别为&lt;strong&gt;毫秒&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;如果使用MongoDB数据库，就不用像传统模式那样，到Redis内存数据库计算后，再将其另存到HDFS上。&lt;/li&gt;
&lt;li&gt;可以利用MongoDB强大的Aggregate功能进行&lt;strong&gt;数据筛选或预处理&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-12-4&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.2-4.png&#34; alt=&#34;1.2-4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.2-4
    &lt;/figcaption&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>1.3关键特性</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.3/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.3/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关系数据库中常用的SQL在MongoDB中都有对应的解决方案，JOIN语句例外，不支持；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB的特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;嵌套文档模型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自由的表结构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自带强大的计算框架，支持MapReduce、spark&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制集保证数据高可靠性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分片集群实现高可扩展性，实现海量数据的分布式存储&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多文档事务的支持，高并发能力&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1.4安装部署</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.4/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;1.安装步骤&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载地址：https://www.mongodb.com/download-center/community  版本4.4或更高版本；或者网盘下载：https://pan.baidu.com/s/15KwMqxcVFi8D6BpMBKNQkA?pwd=abt7 提取码: abt7&lt;/li&gt;
&lt;li&gt;安装方法参考：https://www.runoob.com/mongodb/mongodb-window-install.html&lt;/li&gt;
&lt;li&gt;安装过程中不要勾选MongoDB Compass（可视化环境），MongoDB单独安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2.配置数据和日志文件目录（自定义）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建数据目录：&lt;code&gt;D:\mongodb\data\db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建日志目录：&lt;code&gt;D:\mongodb\data\log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建日志文件：&lt;code&gt;D:\mongodb\data\log\mongodb.log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3.安装成功与否测试&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;启动服务器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C:\Program Files\MongoDB\Server\4.4\bin&amp;gt;.\mongod.exe --dbpath d:\mongodb\data\db
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看到日志倒数第二行：&lt;code&gt;waiting for connections on port 27017&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器输入：http://localhost:27017/&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-14-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.4-1.png&#34; alt=&#34;1.4-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.4-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;出现上述情况，说明安装正常&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4.MongoDB的后台管理shell（mongo进程）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MongoDB Shell是MongoDB自带的交互式Javascript shell,用来对MongoDB进行操作和管理的交互式环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入安装目录bin下，运行mongo进程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;`C:\Program Files\MongoDB\Server\4.4\bin&amp;gt;.\mongo.exe --port 27017`
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认连接到test数据库，可测试加法运算：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-14-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.4-2.png&#34; alt=&#34;1.4-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.4-2
    &lt;/figcaption&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>1.6适合的业务</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.6/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter1/1.6/</guid>
      <description>&lt;p&gt;&lt;strong&gt;1.高并发web应用程序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MongoDB支持无固定结构的表模型，容易增加和减少表中的字段，适应业务变化；&lt;/li&gt;
&lt;li&gt;MongoDB支持分片集群，很容易实现水平扩展，将数据分散到集群中的各个片上，提高了系统存储容量和读写吞吐量；&lt;/li&gt;
&lt;li&gt;“热数据”读并发高，放在内存中访问更快，MongoDB本身就支持内存映射数据文件。&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-16-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.6-1.png&#34; alt=&#34;1.6-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.6-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;2.实时计算类应用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如实时营销，实时推荐；&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-16-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.6-2.png&#34; alt=&#34;1.6-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.6-2
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;3.数据中台&lt;/strong&gt;&lt;/p&gt;


















&lt;figure  id=&#34;figure-16-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.6-3.png&#34; alt=&#34;1.6-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.6-3
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;4.游戏类应用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;装备、经验值进程变化&lt;/li&gt;
&lt;li&gt;实时数据统计分析、促销等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5.日志分析类系统&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;海量日志数据查询快&lt;/li&gt;
&lt;li&gt;为大数据分析和决策提供支持&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-16-4&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter1/images/1.6-4.png&#34; alt=&#34;1.6-4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      1.6-4
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;6.AI应用场景&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;深度学习输入的数据集，如文本、图像、视频等快速变化&lt;/li&gt;
&lt;li&gt;深度学习训练中添加隐藏层、特征标签、超参数和新的输入数据等&lt;/li&gt;
&lt;li&gt;银行、电信、石油、汽车、智能家庭等场景&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>4.1单个集合中的基础聚集函数</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter4/4.1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter4/4.1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;当需要返回集合中文档记录的总条数或者返回不
重复的文档记录时，可以使用 MongoDB 提供
的单个集合中的基础聚集函数.&lt;/strong&gt;&lt;br&gt;
1.db.collection.count(query, options)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回集合中的文档记录数量；&lt;/li&gt;
&lt;li&gt;query 为查询条件；&lt;/li&gt;
&lt;li&gt;options 可选参数，可包含 limit,skip 等；&lt;/li&gt;
&lt;li&gt;例如： db.customers.count({cutst_id:100}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.db.collection.estimatedDocumentCount(options)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;统计集合中的文档记录数量；&lt;/li&gt;
&lt;li&gt;只有options可选参数，可包含maxTimeMS(执行统计时允许等待的最大时长)；&lt;/li&gt;
&lt;li&gt;例：db.customers.estimatedDocumentCount()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.db.collection.countDocuments(query, options)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和count()类似4.db.collection.distinct(field, query, options)- 返回指定字段的非重复值；&lt;/li&gt;
&lt;li&gt;field为需要distinct的字段名；&lt;/li&gt;
&lt;li&gt;uery为查询过滤条件；&lt;/li&gt;
&lt;li&gt;options可选参数，是否区分大小写或字符串比较规则等。  例如- db.books.distinct({“book_id”})&lt;/li&gt;
&lt;li&gt;嵌套字段：db.address.distinct({“location.type”})- 也支持返回数组字段中非重复值。

















&lt;figure  id=&#34;figure-41-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.1-1.png&#34; alt=&#34;4.1-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      4.1-1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>4.2  管道聚集框架</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter4/4.2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter4/4.2/</guid>
      <description>&lt;p&gt;MongoDB的管道聚合框架是参考UNIX上的管道命令实现的，数据通过一个多步骤的管道，&lt;strong&gt;每个步骤&lt;/strong&gt;都会对数据进行&lt;strong&gt;加工&lt;/strong&gt;处理，最后返回需要的结果集。&lt;br&gt;
&lt;strong&gt;管道提供了高效的数据分析流程，是MongoDB中首选的数据分析方法。&lt;/strong&gt;&lt;br&gt;
例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;db.books.aggregate([    {$match:{status:&amp;ldquo;normal&amp;rdquo;}},    {$group:{_id:&amp;quot;$bookid&amp;quot;,total:{$sum:&amp;quot;$num&amp;quot;}}}  ])

















&lt;figure  id=&#34;figure-a-caption&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.2-1.png&#34; alt=&#34;A caption&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      A caption
    &lt;/figcaption&gt;&lt;/figure&gt;


















&lt;figure  id=&#34;figure-a-caption&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.2-2.png&#34; alt=&#34;A caption&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      A caption
    &lt;/figcaption&gt;&lt;/figure&gt;


















&lt;figure  id=&#34;figure-a-caption&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.2-3.png&#34; alt=&#34;A caption&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      A caption
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;strong&gt;管道聚集的语法格式：&lt;/strong&gt;db.collection.aggregate(pipeline,options)  pipeline为数组类型参数，包含一系列处理步骤，常用的管道操作符有以下几个：- $match：过滤文档- $limit：限制管道中文件的数据&lt;/li&gt;
&lt;li&gt;$skip：跳过指定的文档数量，返回剩下的- $sort：对所输入的文档进行排序&lt;/li&gt;
&lt;li&gt;$group：对文档进行分组后计算聚集结果&lt;/li&gt;
&lt;li&gt;$out：输出文档到新集合中（必须是管道操作的最后一步）&lt;strong&gt;与$group一起使用的计算聚集操符：&lt;/strong&gt;- $first：返回group操作后的第一个值&lt;/li&gt;
&lt;li&gt;$last：返回group操作后的最后一个值&lt;/li&gt;
&lt;li&gt;$max：返回group操作后的最大值&lt;/li&gt;
&lt;li&gt;$min：返回group操作后的最小值- $avg：返回group操作后的平均值&lt;/li&gt;
&lt;li&gt;$sum：返回group操作后所有值求和&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;管道中$group分组语法：&lt;/strong&gt;db.collection.aggregate([  { $group:   { _id: “$itemtype”,  &amp;lt; field1&amp;gt;: { &amp;lt; accumulator1&amp;gt; : &amp;lt; expression1&amp;gt; }, &amp;hellip; }  }  ])   - id为必选字段，itemtype为被分组字段, 写成$itemtype，可为空或null;- field1自定义返回字段名，&lt;accumulator1&gt;为可选计算操作，$sum等，&lt;expression1&gt; 为计算传递参数&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>4.3 MapReduce编程</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter4/4.3/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter4/4.3/</guid>
      <description>&lt;p&gt;MongoDB提供了当前流行的MapReduce并行编程模型，为&lt;strong&gt;海量数据的查询分析&lt;/strong&gt;提供了一种更加高效的方法。&lt;/p&gt;
&lt;p&gt;用MongoDB做分布式存储，再用MapReduce来做分析。Map-Reduce操作有两部分：  - 一个map阶段处理每一个文档，并为每一个输入的文档产生一个或多个对象，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在reduce阶段，对上一步Map产生的输出结果进行合并。map-reduce也可以有一个最终的阶段来对最后的输出结果进行修改，就像其他聚集操作一样  map-reduce能够指定一个查询条件来对输入文档的查询结果进行排序以及部分输出（sort and limit）。 Map-reduce一般采用自定义JavaScript函数来处理map操作与reduce操作以及可选的最后一个最终操作；采用自定义的JavaScript能够比管道聚集更灵活，然而一般情况下map-reduce&lt;strong&gt;比管道聚集更加低效&lt;/strong&gt;，也更加复杂。Map-reduce进行聚集的示例：

















&lt;figure  id=&#34;figure-43-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.3-1.png&#34; alt=&#34;4.3-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      4.3-1
    &lt;/figcaption&gt;&lt;/figure&gt;
- 命令：db.orders.mapReduce(   function(){emit(this.custid,this.amount);},  function(key,values){return Array.sum(values)},  { query:{status:&amp;ldquo;A&amp;rdquo;}, out:&amp;ldquo;order_totals&amp;rdquo; } )- query：查询过滤条件，返回状态为A的值；&lt;/li&gt;
&lt;li&gt;map：映射对应字段，产生键值对，emit(key,value)；&lt;/li&gt;
&lt;li&gt;reduce：对map数据进行归约，对数组中value求和；&lt;/li&gt;
&lt;li&gt;out：输出结果保存在集合order_totals中；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;处理流程：query -&amp;gt; map -&amp;gt;reduce&lt;/strong&gt;

















&lt;figure  id=&#34;figure-43-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.3-2.png&#34; alt=&#34;4.3-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      4.3-2
    &lt;/figcaption&gt;&lt;/figure&gt;


















&lt;figure  id=&#34;figure-43-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter4/images/4.3-3.png&#34; alt=&#34;4.3-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      4.3-3
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>6.1复制集概述</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter6/6.1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter6/6.1/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;复制集Replica Sets与分片集群sharding是MongoDB最具有特色的功能：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;复制集实现了数据库的&lt;strong&gt;冗余备份&lt;/strong&gt;、&lt;strong&gt;故障转移&lt;/strong&gt;，这是数据库管理人员最求的目标；&lt;/li&gt;
&lt;li&gt;分片实现了数据的&lt;strong&gt;分布式存储&lt;/strong&gt;、&lt;strong&gt;负载均衡&lt;/strong&gt;，这是海量数据云存储平台不可或缺的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;数据库总是会遇到各种失败的场景，如网络连接断开、断电等，尽管journaling日志功能也提供了数据恢复的功能，但journaling通常是针对单个节点来说的，只能保证单节点数据的一致性；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制集通常是由&lt;strong&gt;多个节点&lt;/strong&gt;组成，每个节点除了journaling日志恢复功能外，整个复制集还具有故障自动转移的功能，这样能保证数据库的&lt;strong&gt;高可用性&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在生产环境中一个复制集最少应该包含三个节点，其中有一个必须是主节点，典型的部署结构如下图：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


















&lt;figure  id=&#34;figure-61-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.1-1.png&#34; alt=&#34;6.1-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.1-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;每个节点都是一个mongod进程对应的实例，节点之间互相周期性的通过&lt;strong&gt;心跳检查&lt;/strong&gt;对方的状态，默认情况下primary节点负责数据的&lt;strong&gt;读、写&lt;/strong&gt;，second节点&lt;strong&gt;备份&lt;/strong&gt;primary节点上的数据，但是arbiter节点不会从primary节点同步数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从它的名字arbiter可以看出，它起到的作用只是当primary节点故障时，能够参与到复制集剩下的节点中**，选择出一个新**的primary节点，它自己永远不会变为primary节点，也不会参与数据的读写。也就是说，数据库的数据会存在primary和second节点中，second节点相当于一个备份，当然second节点可以有多个，当primary节点故障时，second节点有可能变为primary节点。故障转移流程如图所示。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


















&lt;figure  id=&#34;figure-61-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.1-2.png&#34; alt=&#34;6.1-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.1-2
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;
&lt;p&gt;更多复制集的概念和原理可参考如下链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/duanxz/p/10730096.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cnblogs.com/duanxz/p/10730096.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_24598601/article/details/81150614&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.csdn.net/qq_24598601/article/details/81150614&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/replication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.mongodb.com/manual/replication/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>6.2完整部署一个复制集</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter6/6.2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter6/6.2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;复制集的创建和配置：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建复制集中每个节点存放数据的目录&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\db_rs0\data\rs0_0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\db_rs0\data\rs0_1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\db_rs0\data\rs0_2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建复制集中每个节点的日志文件&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\db_rs0\logs\rs0_0.log&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\db_rs0\logs\rs0_1.log&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\db_rs0\logs\rs0_2.log&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;创建复制集中每个节点启动时的配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一个节点配置文件为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\configs_rs0\rs0_0.conf&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dbpath = D:\mongodb\db_rs0\data\rs0_0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;logpath =  D:\mongodb\db_rs0\logs\rs0_0.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;journal = true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;port = 40000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;replSet = rs0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二个节点配置文件为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\configs_rs0\rs0_1.conf&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dbpath = D:\mongodb\db_rs0\data\rs0_1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;logpath =  D:\mongodb\db_rs0\logs\rs0_1.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;journal = true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;port = 40001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;replSet = rs0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三个节点配置文件为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;D:\mongodb\configs_rs0\rs0_2.conf&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dbpath = D:\mongodb\db_rs0\data\rs0_2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;logpath =  D:\mongodb\db_rs0\logs\rs0_2.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;journal = true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;port = 40002
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;replSet = rs0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;启动上面三个节点对应的MongoDB实例&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.\mongod.exe --config D:\mongodb\configs_rs0\rs0_0.conf&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.\mongod.exe --config D:\mongodb\configs_rs0\rs0_1.conf&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.\mongod.exe --config D:\mongodb\configs_rs0\rs0_2.conf&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;未报错即启动成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-62-1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.2-1.png&#34; alt=&#34;6.2-1&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.2-1
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;启动一个mongo客户端，连接到MongoDB实例&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;因为第四步复制集没有配置好，还需要确定哪个节点为primary，哪个是second，哪个是arbiter;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.\mongo.exe --port 40000  //启动客户端并连接到40000&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-62-2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.2-2.png&#34; alt=&#34;6.2-2&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.2-2
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rs.initiate()  //初始化复制集，出现ok: 1即成功&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这时候复制集只有刚才40000这个初始化成员，通过如下命令可查看信息：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rs.conf()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认情况下，刚才配置的节点为primary节点&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;在复制集中添加second和arbiter节点，继续执行如下命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rs0.PRIMARY&amp;gt; rs.add(“localhost:40001”)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出现&lt;code&gt;ok：1&lt;/code&gt;即成功&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rs0.PRIMARY&amp;gt; rs.addArb(“localhost:40002”)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出现&lt;code&gt;ok：1&lt;/code&gt;即成功&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;两个节点添加成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;观察整个复制集的状态信息：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rs.status()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


















&lt;figure  id=&#34;figure-62-3&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.2-3.png&#34; alt=&#34;6.2-3&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.2-3
    &lt;/figcaption&gt;&lt;/figure&gt;



















&lt;figure  id=&#34;figure-62-4&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.2-4.png&#34; alt=&#34;6.2-4&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.2-4
    &lt;/figcaption&gt;&lt;/figure&gt;



















&lt;figure  id=&#34;figure-62-5&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/6.2-5.png&#34; alt=&#34;6.2-5&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      6.2-5
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;复制集的状态信息输出是基于primary节点实例的，在secondary实例上也可以输出复制集的状态信息。&lt;/li&gt;
&lt;li&gt;arbiter节点的“syncingTo” : “”为空，说明不需要从primary节点上同步数据；&lt;/li&gt;
&lt;li&gt;当主节点出现故障时，arbiter节点为仲裁节点，也称为选举节点，可辅助从secondary中选举主节点，不需要占用太多存储空间。&lt;/li&gt;
&lt;li&gt;“date”表示当前实例所在服务器的时间；&lt;/li&gt;
&lt;li&gt;“lastHeartbeat”表示当前实例到此远端成员最近一次成功发送与接收心跳包的时间；&lt;/li&gt;
&lt;li&gt;通过比较这个两个时间可以判断当前实例与此成员相差的时间间隔；&lt;/li&gt;
&lt;li&gt;比如某个成员宕机了，本实例发生此宕机成员的心跳包就不会被成功接收，随着时间推移，本实例的date字段值与此成员上的lastHeartbeat差值就会逐渐增加。&lt;/li&gt;
&lt;li&gt;optime字段，这个字段的值说明了本实例最近一次更改数据库的时间“t” : 1376816431以及每秒执行的操作数据库的次数“i” : 1；&lt;/li&gt;
&lt;li&gt;此字段的值实际上是从本实例上的local数据库中的oplog.rs集合上读取的，这个集合还详细记录了具体是什么操作，如插入语句、修改语句等。&lt;/li&gt;
&lt;li&gt;复制集中的每一个实例都会有一个这样的数据库和集合，如果复制集运行正常，理论上来说，每一个mongod实例上此集合中的记录应该相同。&lt;/li&gt;
&lt;li&gt;实际上mongoDB也是根据此集合来实现复制集中primary节点与secondary节点间的数据同步。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>6.3 单字段索引</title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/chapter6/6.3/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/chapter6/6.3/</guid>
      <description>&lt;h2 id=&#34;631-数据同步&#34;&gt;6.3.1 数据同步&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;6.1节概述了复制集，整体上对复制集有了个概念，但是复制集最重要的功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据同步又是如何实现的？&lt;/li&gt;
&lt;li&gt;自动故障转移是怎么实现的呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用mongo客户端登录到复制集的primary节点上。
&amp;gt;&lt;code&gt;.\mongo.exe --port 40000&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看实例上的数据库rs0:PRIMARY&amp;gt;&lt;code&gt; show dbs&lt;/code&gt;，可以看到默认的数据库&lt;/p&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-默认的数据库&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%871.png&#34; alt=&#34;默认的数据库&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          默认的数据库
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rs0:PRIMARY&amp;gt; &lt;code&gt;use local &lt;/code&gt;//使用本地数据库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;local数据库为复制集所有成员节点上默认创建的数据库，可以查看上面的集合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rs0:PRIMARY&amp;gt; &lt;code&gt;show collections&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-集合&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%872.png&#34; alt=&#34;集合&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          集合
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用mongo客户端登录到复制集的secondary节点上。
&amp;gt;&lt;code&gt;.\mongo.exe --port 40001&lt;/code&gt;，数据库集合内容是一样的&lt;/p&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-主节点集合&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%873.png&#34; alt=&#34;主节点集合&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          主节点集合
        &lt;/figcaption&gt;&lt;/figure&gt;


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-次节点集合&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%874.png&#34; alt=&#34;次节点集合&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          次节点集合
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;oplog.rs是实现复制集之间数据同步的&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;replset.election: 复制集选举信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;replset.minvalid:内部使用，跟踪复制状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;system.replset副本集的配置信息，和使用rs.conf()命令看到的一样&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：在secondary节点上出现not master and slaveOk=false错误时，输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rs0:SECONDARY&amp;gt; &lt;code&gt;rs.slaveOk()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了分析复制集节点上数据的变化，先在复制集上的primary节点上创建一个数据库students，然后插入一条记录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;rs0:PRIMARY&amp;gt;&lt;code&gt; use students&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rs0:PRIMARY&amp;gt;&lt;code&gt;db.scores.insert({&amp;quot;stuid&amp;quot;:1,&amp;quot;subject&amp;quot;:&amp;quot;math&amp;quot;,&amp;quot;score&amp;quot;:99})&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接着查看一下primary节点上oplog.rs集合的内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rs0:PRIMARY&amp;gt; &lt;code&gt;use local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;rs0:PRIMARY&amp;gt;&lt;code&gt;db.oplog.rs.find({“op”:“i”})&lt;/code&gt;//筛选出插入操作的内容&lt;/li&gt;
&lt;/ul&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-查看过程&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%877.png&#34; alt=&#34;查看过程&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          查看过程
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;里面有几个重要字段，其中&amp;quot;ts&amp;quot;表示是这条记录的时间截，&amp;ldquo;t&amp;quot;是秒数，&amp;ldquo;i&amp;quot;每秒操作的次数；&lt;/li&gt;
&lt;li&gt;字段&amp;quot;op&amp;quot;表示的是操作码，值为&amp;quot;i&amp;quot;表示的是insert操作；&lt;/li&gt;
&lt;li&gt;&amp;ldquo;ns&amp;quot;表示插入操作发生的命名空间，这里值为: &amp;ldquo;students.scores&amp;rdquo;，由数据库和集合名构成；&lt;/li&gt;
&lt;li&gt;&amp;ldquo;o&amp;quot;表示的是此插入操作包含的文档对象；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看secondary节点上的数据，我们发现在secondary节点上新插入了一个数据库students，这就实现了复制集建的数据同步&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rs0:SECONDARY&amp;gt; show dbs&lt;/li&gt;
&lt;li&gt;rs0:SECONDARY&amp;gt; use students&lt;/li&gt;
&lt;li&gt;rs0:SECONDARY&amp;gt; db.scores.find()&lt;/li&gt;
&lt;/ul&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-次节点数据库同步&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%878.png&#34; alt=&#34;次节点数据库同步&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          次节点数据库同步
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同步流程&lt;/p&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-同步图解&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%879.png&#34; alt=&#34;同步图解&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          同步图解
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;当primary节点完成插入操作后，secondary节点为了保证数据的同步也会完成一些动作
&lt;ul&gt;
&lt;li&gt;a.所有secondary节点检查自己的local数据上oplog.rs集合，找出最近的一条记录的时间截&lt;/li&gt;
&lt;li&gt;b.接着它会查询primary节点上的oplog.rs集合，找出所有大于此时间截的记录&lt;/li&gt;
&lt;li&gt;c.最后它将这些找到的记录插入到自己的oplog.rs集合中并执行这些记录所代表的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;通过这三步策略，就能保证secondary节点上的数据与primary节点上的数据同步了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于oplog.rs集合还有一个很重要的方面，那就是它的大小是固定的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;假如大小没限制，那么随着时间的推移，在数据库上的操作会&lt;mark&gt;逐渐累积&lt;/mark&gt;，oplog.rs集合中保存的记录也会&lt;mark&gt;逐渐增多&lt;/mark&gt;，这样会消耗大量的存储空间&lt;/li&gt;
&lt;li&gt;同时对于某个时间点以前的操作记录，早已同步到secondary节点上，也没有必要一直保存这些记录&lt;/li&gt;
&lt;li&gt;因此mongoDB将oplog.rs集合设置成一个&lt;mark&gt;capped类型&lt;/mark&gt;的集合，实际上就是一个循环使用的缓冲区&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;固定大小的oplog.rs会带来新的问题，考虑下面这种场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;假如一个secondary节点因为宕机，长时间不能恢复，而此时大量的写操作发生在primary节点上，当secondary节点恢复时，利用自己oplog.rs集合上最新的时间截去查找primary节点上的oplog.rs集合，会出现找不到任何记录。&lt;/li&gt;
&lt;li&gt;因为长时间不在线，primary节点上的oplog.rs集合中的记录早已全部刷新了一遍，这样就不得不手动重新同步数据了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因此oplog.rs的大小是很重要，在32位的系统上默认大小是50MB，在64位的机器上默认是5%的空闲磁盘空间大小，也可以在mongod启动命令中通过项—oplogSize设置其大小&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;632-故障转移&#34;&gt;6.3.2 故障转移&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在复制集中的心跳&amp;quot;lastHeartbeat&amp;quot;字段，mongoDB就是靠它来实现自动故障转移的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mongod实例每隔2秒就向其它成员发送一个心跳包以及通过rs.status()中返回的成员的“health”值来判断成员的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果出现复制集中primary节点不可用了，那么复制集中所有secondary的节点就会触发一次选举操作，选出一个新的primary节点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如上所配置的复制集中如果primary节点宕机了，那么就会选举secondary节点成为primary节点，arbiter节点只是参与选举其它成员成为primary节点，自己永远不会成为primary节点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果secondary节点有多个则会选择拥有最新时间截的oplog记录或较高权限的节点成为primary节点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果是某个secondary节点失败了，只要复制集中还有其它secondary节点或arbiter节点存在，就不会发生重新选举primary节点的过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下面模拟两种失败场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一是secondary节点的失败，然后过一段时间后重启（时间不能无限期，否则会导致oplog.rs集合严重滞后的问题，需要手动才能同步）。以下为步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1.查看当前复制集的配置情况&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rs0:PRIMARY&amp;gt; &lt;code&gt;rs.conf()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2.通过Kill掉secondary节点所在的mongod实例，模拟第一种故障情况。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过&lt;code&gt;rs.status()&lt;/code&gt;命令查看复制集状态，secondary节点状态“health” : 0；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3.接着通过primary节点插入一条记录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rs0:PRIMARY&amp;gt;&lt;code&gt;db.scores.insert({stuid:2,subject:&amp;quot;english&amp;quot;,score:100})&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4.再次查看复制集状态信息rs.status()，可以看到primary成员节点上oplpog信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;与上面down机的成员节点比较，optime已经不一样，primary节点上要新于down机的节点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5.重新启动Kill掉的secondary节点&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\mongod.exe --config D:\mongodb\configs_rs0\rs0_1.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查询复制集状态信息&lt;code&gt;rs.status()&lt;/code&gt;，观看节点“40001”的状态信息&lt;/li&gt;
&lt;li&gt;说明secondary节点已经恢复，并且从primary节点同步到了最新的操作数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;6.登录secondary节点来查询&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;rs0:SECONDARY&amp;gt; &lt;code&gt;use students&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;rs0:SECONDARY&amp;gt; &lt;code&gt;db.scores.find()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以下第二条记录正是在primary节点上插入的记录，再次证明数据确实同步过来了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-插入记录&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%8710.png&#34; alt=&#34;插入记录&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          插入记录
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二是primary节点故障模拟&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1.将primary节点Kill掉，并查询rs.status()，主节点以及宕机。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;字段&amp;quot;health&amp;quot;的值为0，说明原来的primary节点已经down机了。&lt;/li&gt;
&lt;li&gt;原来secondary节点变成了primary节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2.在新的primary节点上插入一条记录&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;rs0:PRIMARY&amp;gt;&lt;code&gt;db.scores.insert({stuid:3,subject:&amp;quot;computer&amp;quot;,score:99})&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3.重新恢复&amp;quot;40000&amp;quot;节点（原来的primary节点）&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.\mongod.exe --config D:\mongodb\configs_rs0\rs0_0.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;再次查看复制集状态rs.status()&lt;/li&gt;
&lt;li&gt;“40000”实例被重新激活后，变成了secondary节点，oplog也被同步成最新的了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说明当primary节点故障时，复制集能自动转移故障，将其中一个secondary节点变为primary节点，读写操作继续在新的primary节点上进行。原来primary节点恢复后，在复制集中变成了secondary节点。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-数据同步原理&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%8711.png&#34; alt=&#34;数据同步原理&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          数据同步原理
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上面两中情况都得到了验证，但是有一点要注意，mongDB默认情况下只能在primary节点上进行读写操作，如下图所示：&lt;/p&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-图示&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%8712.png&#34; alt=&#34;图示&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          图示
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于客户端应用程序来说，对复制集的读写操作是透明的，默认情况它总是在primary节点上进行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mongoDB提供了很多种常见编程语言的驱动程序，驱动程序位于应用程序与mongod实例之间，应用程发起与复制集的连接，驱动程序自动选择primary节点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当primary节点失效，复制集发生故障转移时，复制集将先关闭与所有客户端的socket连接，驱动程序将返回一个异常，应用程序收到这个异常，这个时候需要应用程序开发人员去处理这些异常，同时驱动程序会尝试重新与primary节点建立连接（这个动作对应用程序来说是透明的）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如这个时候正在发生一个读操作，在异常处理中你可以重新发起读数据命令，因为读操作不会改变数据库的数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如这个时候发生的是写操作，情况就变得微妙起来，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果是&lt;strong&gt;非安全模式&lt;/strong&gt;下的写，就会产生不确定因素，写是否成功不确定。&lt;/li&gt;
&lt;li&gt;如果是&lt;strong&gt;安全模式&lt;/strong&gt;，驱动程序会通过getlasterror命令知道哪些写操作成功了，哪些失败，驱动程序会返回失败的信息给应用程序，针对这个异常信息，应用程序可以决定怎样处置这个写操作，可以重新执行写操作，也可以直接给用户报出这个错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;633-写关注&#34;&gt;6.3.3 写关注&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于某些应用程序来说，写关注是重要的。它能&lt;mark&gt;判断哪些写操作成功写入了&lt;/mark&gt;，哪些失败了，对于失败的操作，驱动程序能返回错误，由应用程序决定怎么处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果没有写关注，应用程序发送一个写操作到socket后，就不会管后面发生了什么情况，不知道是否成功写入数据库，这种情形对于日志类型的应用程序还是可以接受的，因为偶尔的写失败不会影响整个日志的监控情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带有写关注的操作会等到&lt;mark&gt;数据库确认成功&lt;/mark&gt;写入后才能返回，因此写关注会带来一点性能的损失。下面先分析复制集上写关注配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认情况下复制集的写关注只针对primary节点，如下图所示:&lt;/p&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-图示&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%8713.png&#34; alt=&#34;图示&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          图示
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;w参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为0时，不使用写关注，不需要等待就返回。&lt;/li&gt;
&lt;li&gt;为1时，只关注primary节点返回确认写成功的消息。&lt;/li&gt;
&lt;li&gt;为n时，写关注将针对复制集中&lt;mark&gt;n个&lt;/mark&gt;节点，当客户端收到这些节点的反馈信息后，才能返回确认写成功的消息。&lt;/li&gt;
&lt;li&gt;为majority时，取决于复制集中大多数投票节点的数量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;w=2的写关注执行流程图&lt;/p&gt;

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    &lt;figure  id=&#34;figure-流程图&#34;&gt;
      &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
        &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://fanfanshen.github.io/courses/BigDataStorage/chapter6/images/%e5%9b%be%e7%89%8714.png&#34; alt=&#34;流程图&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
      &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
          流程图
        &lt;/figcaption&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;634-读参考&#34;&gt;6.3.4 读参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;读参考是指MongoDB将客户端的读请求路由到复制集中指定的成员上，默认情况下读操作的请求被路由到复制集中的primary节点上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从Primary节点上进行读取能够保证读到的数据是最新的，但是将读操作路由到其他secondary节点上去后，由于从primary节点同步数据到secondary节点会产生时间差，可能导致从secondary节点上读到的数据不是最新的。当然这对于实时性要求不是很高的绝大部分应用程序来说，并不是大问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于读参考还有一点需要注意，因为每一个secondary节点都会从primary节点同步数据，所有secondary节点一般有相同的写操作流量，同时primary节点上的读操作流量也并没有减少，所以读参考并不能提高系统读写的容量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它最大的好处是能够使客户端的读请求路由到最佳的secondary节点上(如最近的节点)，提高客户端的读效率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB驱动支持的读参考模式如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;primary模式&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;这是默认的读操作模式，所有的读请求都路由到复制集中的primary节点上，如果primary节点故障了，读操作将会产生一个错误或者抛出一个异常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;primaryPrefered模式&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在大多数模式下，读操作从primary节点上进行，如果primary节点故障无法读取，读操作将会路由到secondary节点上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;secondary模式&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;读操作只能从secondary节点上进行，如果没有可用的secondary节点，读操作将会产生错误或抛出异常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;secondaryPrefered模式&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在大多数模式下，读操作从secondary节点上进行，但当复制集中只有一个primary时，读操作将用这个复制集的primary节点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;neares模式&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;读操作从最近的节点上进行，有可能是primary节点，也有可能是secondary节点，并不会考虑节点的类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>一种SRAM辅助新型非易失性缓存的磨损均衡方法</title>
      <link>https://fanfanshen.github.io/publication/2017computer/</link>
      <pubDate>Thu, 08 Jun 2017 18:21:03 +0800</pubDate>
      <guid>https://fanfanshen.github.io/publication/2017computer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>https://fanfanshen.github.io/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://fanfanshen.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://fanfanshen.github.io/courses/bigdatastorage/task/exp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fanfanshen.github.io/courses/bigdatastorage/task/exp/</guid>
      <description>&lt;h2 id=&#34;大作业说明测试&#34;&gt;大作业说明测试&lt;/h2&gt;
</description>
    </item>
    
  </channel>
</rss>
